{
	"id": "2bbf6a0703e0daf9bb94a5cb7656470e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Merit.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol\";\nimport \"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol\";\nimport \"@openzeppelin/contracts/token/ERC777/IERC777.sol\";\n\n\ncontract Merit is IERC777Recipient {\n    \n    mapping(address => uint) public givers;\n    address _owner;\n    IERC777 _token;\n    IERC1820Registry private _erc1820 = IERC1820Registry(0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24);\n    bytes32 constant private TOKENS_RECIPIENT_INTERFACE_HASH = 0xb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b;\n    constructor(IERC777 token) {\n         _erc1820.setInterfaceImplementer(address(this), TOKENS_RECIPIENT_INTERFACE_HASH, address(this));\n        _owner = msg.sender;\n        _token = token;\n    }\n\n    function tokensReceived(address operator,address from,address to,uint amount,  \n        bytes calldata userData,\n        bytes calldata operatorData) external {\n        givers[from] += amount;\n    }\n\n    function  withdraw() external  {\n        require(msg.sender == _owner, \"no permission\");\n        // 返回当前账号的代币数量\n        uint balance = _token.balanceOf(address(this));\n        // 发送代币\n        _token.send(_owner, balance, \"\");\n    }\n\n}"
			},
			"@openzeppelin/contracts/token/ERC777/IERC777.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC777/IERC777.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC777Token standard as defined in the EIP.\n *\n * This contract uses the\n * https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let\n * token holders and recipients react to token movements by using setting implementers\n * for the associated interfaces in said registry. See {IERC1820Registry} and\n * {ERC1820Implementer}.\n */\ninterface IERC777 {\n    /**\n     * @dev Emitted when `amount` tokens are created by `operator` and assigned to `to`.\n     *\n     * Note that some additional user `data` and `operatorData` can be logged in the event.\n     */\n    event Minted(address indexed operator, address indexed to, uint256 amount, bytes data, bytes operatorData);\n\n    /**\n     * @dev Emitted when `operator` destroys `amount` tokens from `account`.\n     *\n     * Note that some additional user `data` and `operatorData` can be logged in the event.\n     */\n    event Burned(address indexed operator, address indexed from, uint256 amount, bytes data, bytes operatorData);\n\n    /**\n     * @dev Emitted when `operator` is made operator for `tokenHolder`.\n     */\n    event AuthorizedOperator(address indexed operator, address indexed tokenHolder);\n\n    /**\n     * @dev Emitted when `operator` is revoked its operator status for `tokenHolder`.\n     */\n    event RevokedOperator(address indexed operator, address indexed tokenHolder);\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the smallest part of the token that is not divisible. This\n     * means all token operations (creation, movement and destruction) must have\n     * amounts that are a multiple of this number.\n     *\n     * For most token contracts, this value will equal 1.\n     */\n    function granularity() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by an account (`owner`).\n     */\n    function balanceOf(address owner) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * If send or receive hooks are registered for the caller and `recipient`,\n     * the corresponding functions will be called with `data` and empty\n     * `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n     *\n     * Emits a {Sent} event.\n     *\n     * Requirements\n     *\n     * - the caller must have at least `amount` tokens.\n     * - `recipient` cannot be the zero address.\n     * - if `recipient` is a contract, it must implement the {IERC777Recipient}\n     * interface.\n     */\n    function send(address recipient, uint256 amount, bytes calldata data) external;\n\n    /**\n     * @dev Destroys `amount` tokens from the caller's account, reducing the\n     * total supply.\n     *\n     * If a send hook is registered for the caller, the corresponding function\n     * will be called with `data` and empty `operatorData`. See {IERC777Sender}.\n     *\n     * Emits a {Burned} event.\n     *\n     * Requirements\n     *\n     * - the caller must have at least `amount` tokens.\n     */\n    function burn(uint256 amount, bytes calldata data) external;\n\n    /**\n     * @dev Returns true if an account is an operator of `tokenHolder`.\n     * Operators can send and burn tokens on behalf of their owners. All\n     * accounts are their own operator.\n     *\n     * See {operatorSend} and {operatorBurn}.\n     */\n    function isOperatorFor(address operator, address tokenHolder) external view returns (bool);\n\n    /**\n     * @dev Make an account an operator of the caller.\n     *\n     * See {isOperatorFor}.\n     *\n     * Emits an {AuthorizedOperator} event.\n     *\n     * Requirements\n     *\n     * - `operator` cannot be calling address.\n     */\n    function authorizeOperator(address operator) external;\n\n    /**\n     * @dev Revoke an account's operator status for the caller.\n     *\n     * See {isOperatorFor} and {defaultOperators}.\n     *\n     * Emits a {RevokedOperator} event.\n     *\n     * Requirements\n     *\n     * - `operator` cannot be calling address.\n     */\n    function revokeOperator(address operator) external;\n\n    /**\n     * @dev Returns the list of default operators. These accounts are operators\n     * for all token holders, even if {authorizeOperator} was never called on\n     * them.\n     *\n     * This list is immutable, but individual holders may revoke these via\n     * {revokeOperator}, in which case {isOperatorFor} will return false.\n     */\n    function defaultOperators() external view returns (address[] memory);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient`. The caller must\n     * be an operator of `sender`.\n     *\n     * If send or receive hooks are registered for `sender` and `recipient`,\n     * the corresponding functions will be called with `data` and\n     * `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n     *\n     * Emits a {Sent} event.\n     *\n     * Requirements\n     *\n     * - `sender` cannot be the zero address.\n     * - `sender` must have at least `amount` tokens.\n     * - the caller must be an operator for `sender`.\n     * - `recipient` cannot be the zero address.\n     * - if `recipient` is a contract, it must implement the {IERC777Recipient}\n     * interface.\n     */\n    function operatorSend(\n        address sender,\n        address recipient,\n        uint256 amount,\n        bytes calldata data,\n        bytes calldata operatorData\n    ) external;\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the total supply.\n     * The caller must be an operator of `account`.\n     *\n     * If a send hook is registered for `account`, the corresponding function\n     * will be called with `data` and `operatorData`. See {IERC777Sender}.\n     *\n     * Emits a {Burned} event.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     * - the caller must be an operator for `account`.\n     */\n    function operatorBurn(address account, uint256 amount, bytes calldata data, bytes calldata operatorData) external;\n\n    event Sent(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256 amount,\n        bytes data,\n        bytes operatorData\n    );\n}\n"
			},
			"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC777/IERC777Recipient.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC777TokensRecipient standard as defined in the EIP.\n *\n * Accounts can be notified of {IERC777} tokens being sent to them by having a\n * contract implement this interface (contract holders can be their own\n * implementer) and registering it on the\n * https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry].\n *\n * See {IERC1820Registry} and {ERC1820Implementer}.\n */\ninterface IERC777Recipient {\n    /**\n     * @dev Called by an {IERC777} token contract whenever tokens are being\n     * moved or created into a registered account (`to`). The type of operation\n     * is conveyed by `from` being the zero address or not.\n     *\n     * This call occurs _after_ the token contract's state is updated, so\n     * {IERC777-balanceOf}, etc., can be used to query the post-operation state.\n     *\n     * This function may revert to prevent the operation from being executed.\n     */\n    function tokensReceived(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes calldata userData,\n        bytes calldata operatorData\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/introspection/IERC1820Registry.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the global ERC1820 Registry, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register\n * implementers for interfaces in this registry, as well as query support.\n *\n * Implementers may be shared by multiple accounts, and can also implement more\n * than a single interface for each account. Contracts can implement interfaces\n * for themselves, but externally-owned accounts (EOA) must delegate this to a\n * contract.\n *\n * {IERC165} interfaces can also be queried via the registry.\n *\n * For an in-depth explanation and source code analysis, see the EIP text.\n */\ninterface IERC1820Registry {\n    event InterfaceImplementerSet(address indexed account, bytes32 indexed interfaceHash, address indexed implementer);\n\n    event ManagerChanged(address indexed account, address indexed newManager);\n\n    /**\n     * @dev Sets `newManager` as the manager for `account`. A manager of an\n     * account is able to set interface implementers for it.\n     *\n     * By default, each account is its own manager. Passing a value of `0x0` in\n     * `newManager` will reset the manager to this initial state.\n     *\n     * Emits a {ManagerChanged} event.\n     *\n     * Requirements:\n     *\n     * - the caller must be the current manager for `account`.\n     */\n    function setManager(address account, address newManager) external;\n\n    /**\n     * @dev Returns the manager for `account`.\n     *\n     * See {setManager}.\n     */\n    function getManager(address account) external view returns (address);\n\n    /**\n     * @dev Sets the `implementer` contract as ``account``'s implementer for\n     * `interfaceHash`.\n     *\n     * `account` being the zero address is an alias for the caller's address.\n     * The zero address can also be used in `implementer` to remove an old one.\n     *\n     * See {interfaceHash} to learn how these are created.\n     *\n     * Emits an {InterfaceImplementerSet} event.\n     *\n     * Requirements:\n     *\n     * - the caller must be the current manager for `account`.\n     * - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not\n     * end in 28 zeroes).\n     * - `implementer` must implement {IERC1820Implementer} and return true when\n     * queried for support, unless `implementer` is the caller. See\n     * {IERC1820Implementer-canImplementInterfaceForAddress}.\n     */\n    function setInterfaceImplementer(address account, bytes32 _interfaceHash, address implementer) external;\n\n    /**\n     * @dev Returns the implementer of `interfaceHash` for `account`. If no such\n     * implementer is registered, returns the zero address.\n     *\n     * If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28\n     * zeroes), `account` will be queried for support of it.\n     *\n     * `account` being the zero address is an alias for the caller's address.\n     */\n    function getInterfaceImplementer(address account, bytes32 _interfaceHash) external view returns (address);\n\n    /**\n     * @dev Returns the interface hash for an `interfaceName`, as defined in the\n     * corresponding\n     * https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP].\n     */\n    function interfaceHash(string calldata interfaceName) external pure returns (bytes32);\n\n    /**\n     * @notice Updates the cache with whether the contract implements an ERC165 interface or not.\n     * @param account Address of the contract for which to update the cache.\n     * @param interfaceId ERC165 interface for which to update the cache.\n     */\n    function updateERC165Cache(address account, bytes4 interfaceId) external;\n\n    /**\n     * @notice Checks whether a contract implements an ERC165 interface or not.\n     * If the result is not cached a direct lookup on the contract address is performed.\n     * If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling\n     * {updateERC165Cache} with the contract address.\n     * @param account Address of the contract to check.\n     * @param interfaceId ERC165 interface to check.\n     * @return True if `account` implements `interfaceId`, false otherwise.\n     */\n    function implementsERC165Interface(address account, bytes4 interfaceId) external view returns (bool);\n\n    /**\n     * @notice Checks whether a contract implements an ERC165 interface or not without using or updating the cache.\n     * @param account Address of the contract to check.\n     * @param interfaceId ERC165 interface to check.\n     * @return True if `account` implements `interfaceId`, false otherwise.\n     */\n    function implementsERC165InterfaceNoCache(address account, bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC777/IERC777.sol": {
				"IERC777": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenHolder",
									"type": "address"
								}
							],
							"name": "AuthorizedOperator",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "Burned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "Minted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenHolder",
									"type": "address"
								}
							],
							"name": "RevokedOperator",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "Sent",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "authorizeOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "defaultOperators",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "granularity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenHolder",
									"type": "address"
								}
							],
							"name": "isOperatorFor",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "operatorBurn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "operatorSend",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "revokeOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "send",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC777Token standard as defined in the EIP. This contract uses the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let token holders and recipients react to token movements by using setting implementers for the associated interfaces in said registry. See {IERC1820Registry} and {ERC1820Implementer}.",
						"events": {
							"AuthorizedOperator(address,address)": {
								"details": "Emitted when `operator` is made operator for `tokenHolder`."
							},
							"Burned(address,address,uint256,bytes,bytes)": {
								"details": "Emitted when `operator` destroys `amount` tokens from `account`. Note that some additional user `data` and `operatorData` can be logged in the event."
							},
							"Minted(address,address,uint256,bytes,bytes)": {
								"details": "Emitted when `amount` tokens are created by `operator` and assigned to `to`. Note that some additional user `data` and `operatorData` can be logged in the event."
							},
							"RevokedOperator(address,address)": {
								"details": "Emitted when `operator` is revoked its operator status for `tokenHolder`."
							}
						},
						"kind": "dev",
						"methods": {
							"authorizeOperator(address)": {
								"details": "Make an account an operator of the caller. See {isOperatorFor}. Emits an {AuthorizedOperator} event. Requirements - `operator` cannot be calling address."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by an account (`owner`)."
							},
							"burn(uint256,bytes)": {
								"details": "Destroys `amount` tokens from the caller's account, reducing the total supply. If a send hook is registered for the caller, the corresponding function will be called with `data` and empty `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - the caller must have at least `amount` tokens."
							},
							"defaultOperators()": {
								"details": "Returns the list of default operators. These accounts are operators for all token holders, even if {authorizeOperator} was never called on them. This list is immutable, but individual holders may revoke these via {revokeOperator}, in which case {isOperatorFor} will return false."
							},
							"granularity()": {
								"details": "Returns the smallest part of the token that is not divisible. This means all token operations (creation, movement and destruction) must have amounts that are a multiple of this number. For most token contracts, this value will equal 1."
							},
							"isOperatorFor(address,address)": {
								"details": "Returns true if an account is an operator of `tokenHolder`. Operators can send and burn tokens on behalf of their owners. All accounts are their own operator. See {operatorSend} and {operatorBurn}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"operatorBurn(address,uint256,bytes,bytes)": {
								"details": "Destroys `amount` tokens from `account`, reducing the total supply. The caller must be an operator of `account`. If a send hook is registered for `account`, the corresponding function will be called with `data` and `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - `account` cannot be the zero address. - `account` must have at least `amount` tokens. - the caller must be an operator for `account`."
							},
							"operatorSend(address,address,uint256,bytes,bytes)": {
								"details": "Moves `amount` tokens from `sender` to `recipient`. The caller must be an operator of `sender`. If send or receive hooks are registered for `sender` and `recipient`, the corresponding functions will be called with `data` and `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - `sender` cannot be the zero address. - `sender` must have at least `amount` tokens. - the caller must be an operator for `sender`. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface."
							},
							"revokeOperator(address)": {
								"details": "Revoke an account's operator status for the caller. See {isOperatorFor} and {defaultOperators}. Emits a {RevokedOperator} event. Requirements - `operator` cannot be calling address."
							},
							"send(address,uint256,bytes)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. If send or receive hooks are registered for the caller and `recipient`, the corresponding functions will be called with `data` and empty `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - the caller must have at least `amount` tokens. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"authorizeOperator(address)": "959b8c3f",
							"balanceOf(address)": "70a08231",
							"burn(uint256,bytes)": "fe9d9303",
							"defaultOperators()": "06e48538",
							"granularity()": "556f0dc7",
							"isOperatorFor(address,address)": "d95b6371",
							"name()": "06fdde03",
							"operatorBurn(address,uint256,bytes,bytes)": "fc673c4f",
							"operatorSend(address,address,uint256,bytes,bytes)": "62ad1b83",
							"revokeOperator(address)": "fad8b32a",
							"send(address,uint256,bytes)": "9bd9bbc6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"AuthorizedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"RevokedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Sent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultOperators\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"granularity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC777Token standard as defined in the EIP. This contract uses the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let token holders and recipients react to token movements by using setting implementers for the associated interfaces in said registry. See {IERC1820Registry} and {ERC1820Implementer}.\",\"events\":{\"AuthorizedOperator(address,address)\":{\"details\":\"Emitted when `operator` is made operator for `tokenHolder`.\"},\"Burned(address,address,uint256,bytes,bytes)\":{\"details\":\"Emitted when `operator` destroys `amount` tokens from `account`. Note that some additional user `data` and `operatorData` can be logged in the event.\"},\"Minted(address,address,uint256,bytes,bytes)\":{\"details\":\"Emitted when `amount` tokens are created by `operator` and assigned to `to`. Note that some additional user `data` and `operatorData` can be logged in the event.\"},\"RevokedOperator(address,address)\":{\"details\":\"Emitted when `operator` is revoked its operator status for `tokenHolder`.\"}},\"kind\":\"dev\",\"methods\":{\"authorizeOperator(address)\":{\"details\":\"Make an account an operator of the caller. See {isOperatorFor}. Emits an {AuthorizedOperator} event. Requirements - `operator` cannot be calling address.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by an account (`owner`).\"},\"burn(uint256,bytes)\":{\"details\":\"Destroys `amount` tokens from the caller's account, reducing the total supply. If a send hook is registered for the caller, the corresponding function will be called with `data` and empty `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - the caller must have at least `amount` tokens.\"},\"defaultOperators()\":{\"details\":\"Returns the list of default operators. These accounts are operators for all token holders, even if {authorizeOperator} was never called on them. This list is immutable, but individual holders may revoke these via {revokeOperator}, in which case {isOperatorFor} will return false.\"},\"granularity()\":{\"details\":\"Returns the smallest part of the token that is not divisible. This means all token operations (creation, movement and destruction) must have amounts that are a multiple of this number. For most token contracts, this value will equal 1.\"},\"isOperatorFor(address,address)\":{\"details\":\"Returns true if an account is an operator of `tokenHolder`. Operators can send and burn tokens on behalf of their owners. All accounts are their own operator. See {operatorSend} and {operatorBurn}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"operatorBurn(address,uint256,bytes,bytes)\":{\"details\":\"Destroys `amount` tokens from `account`, reducing the total supply. The caller must be an operator of `account`. If a send hook is registered for `account`, the corresponding function will be called with `data` and `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - `account` cannot be the zero address. - `account` must have at least `amount` tokens. - the caller must be an operator for `account`.\"},\"operatorSend(address,address,uint256,bytes,bytes)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient`. The caller must be an operator of `sender`. If send or receive hooks are registered for `sender` and `recipient`, the corresponding functions will be called with `data` and `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - `sender` cannot be the zero address. - `sender` must have at least `amount` tokens. - the caller must be an operator for `sender`. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface.\"},\"revokeOperator(address)\":{\"details\":\"Revoke an account's operator status for the caller. See {isOperatorFor} and {defaultOperators}. Emits a {RevokedOperator} event. Requirements - `operator` cannot be calling address.\"},\"send(address,uint256,bytes)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. If send or receive hooks are registered for the caller and `recipient`, the corresponding functions will be called with `data` and empty `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - the caller must have at least `amount` tokens. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":\"IERC777\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x79e6094047e40d49efa3c725b7a1519e16c28c46944884b5f6d0fbe89b450f03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2570d04d0b74df414fa33f9f7da6442419a07909ece7baeecd7147d9c7d6a432\",\"dweb:/ipfs/QmRDQM1kzddwCk8ateQgnogu495fWb4L9Xwr42DAQhHzi5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol": {
				"IERC777Recipient": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "userData",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "tokensReceived",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC777TokensRecipient standard as defined in the EIP. Accounts can be notified of {IERC777} tokens being sent to them by having a contract implement this interface (contract holders can be their own implementer) and registering it on the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry]. See {IERC1820Registry} and {ERC1820Implementer}.",
						"kind": "dev",
						"methods": {
							"tokensReceived(address,address,address,uint256,bytes,bytes)": {
								"details": "Called by an {IERC777} token contract whenever tokens are being moved or created into a registered account (`to`). The type of operation is conveyed by `from` being the zero address or not. This call occurs _after_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the post-operation state. This function may revert to prevent the operation from being executed."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"tokensReceived(address,address,address,uint256,bytes,bytes)": "0023de29"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"tokensReceived\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC777TokensRecipient standard as defined in the EIP. Accounts can be notified of {IERC777} tokens being sent to them by having a contract implement this interface (contract holders can be their own implementer) and registering it on the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry]. See {IERC1820Registry} and {ERC1820Implementer}.\",\"kind\":\"dev\",\"methods\":{\"tokensReceived(address,address,address,uint256,bytes,bytes)\":{\"details\":\"Called by an {IERC777} token contract whenever tokens are being moved or created into a registered account (`to`). The type of operation is conveyed by `from` being the zero address or not. This call occurs _after_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the post-operation state. This function may revert to prevent the operation from being executed.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol\":\"IERC777Recipient\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol\":{\"keccak256\":\"0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3\",\"dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol": {
				"IERC1820Registry": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "interfaceHash",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementer",
									"type": "address"
								}
							],
							"name": "InterfaceImplementerSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newManager",
									"type": "address"
								}
							],
							"name": "ManagerChanged",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_interfaceHash",
									"type": "bytes32"
								}
							],
							"name": "getInterfaceImplementer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "implementsERC165Interface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "implementsERC165InterfaceNoCache",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "interfaceName",
									"type": "string"
								}
							],
							"name": "interfaceHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_interfaceHash",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "implementer",
									"type": "address"
								}
							],
							"name": "setInterfaceImplementer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "newManager",
									"type": "address"
								}
							],
							"name": "setManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "updateERC165Cache",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the global ERC1820 Registry, as defined in the https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register implementers for interfaces in this registry, as well as query support. Implementers may be shared by multiple accounts, and can also implement more than a single interface for each account. Contracts can implement interfaces for themselves, but externally-owned accounts (EOA) must delegate this to a contract. {IERC165} interfaces can also be queried via the registry. For an in-depth explanation and source code analysis, see the EIP text.",
						"kind": "dev",
						"methods": {
							"getInterfaceImplementer(address,bytes32)": {
								"details": "Returns the implementer of `interfaceHash` for `account`. If no such implementer is registered, returns the zero address. If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28 zeroes), `account` will be queried for support of it. `account` being the zero address is an alias for the caller's address."
							},
							"getManager(address)": {
								"details": "Returns the manager for `account`. See {setManager}."
							},
							"implementsERC165Interface(address,bytes4)": {
								"params": {
									"account": "Address of the contract to check.",
									"interfaceId": "ERC165 interface to check."
								},
								"returns": {
									"_0": "True if `account` implements `interfaceId`, false otherwise."
								}
							},
							"implementsERC165InterfaceNoCache(address,bytes4)": {
								"params": {
									"account": "Address of the contract to check.",
									"interfaceId": "ERC165 interface to check."
								},
								"returns": {
									"_0": "True if `account` implements `interfaceId`, false otherwise."
								}
							},
							"interfaceHash(string)": {
								"details": "Returns the interface hash for an `interfaceName`, as defined in the corresponding https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP]."
							},
							"setInterfaceImplementer(address,bytes32,address)": {
								"details": "Sets the `implementer` contract as ``account``'s implementer for `interfaceHash`. `account` being the zero address is an alias for the caller's address. The zero address can also be used in `implementer` to remove an old one. See {interfaceHash} to learn how these are created. Emits an {InterfaceImplementerSet} event. Requirements: - the caller must be the current manager for `account`. - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not end in 28 zeroes). - `implementer` must implement {IERC1820Implementer} and return true when queried for support, unless `implementer` is the caller. See {IERC1820Implementer-canImplementInterfaceForAddress}."
							},
							"setManager(address,address)": {
								"details": "Sets `newManager` as the manager for `account`. A manager of an account is able to set interface implementers for it. By default, each account is its own manager. Passing a value of `0x0` in `newManager` will reset the manager to this initial state. Emits a {ManagerChanged} event. Requirements: - the caller must be the current manager for `account`."
							},
							"updateERC165Cache(address,bytes4)": {
								"params": {
									"account": "Address of the contract for which to update the cache.",
									"interfaceId": "ERC165 interface for which to update the cache."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getInterfaceImplementer(address,bytes32)": "aabbb8ca",
							"getManager(address)": "3d584063",
							"implementsERC165Interface(address,bytes4)": "f712f3e8",
							"implementsERC165InterfaceNoCache(address,bytes4)": "b7056765",
							"interfaceHash(string)": "65ba36c1",
							"setInterfaceImplementer(address,bytes32,address)": "29965a1d",
							"setManager(address,address)": "5df8122f",
							"updateERC165Cache(address,bytes4)": "a41e7d51"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"interfaceHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementer\",\"type\":\"address\"}],\"name\":\"InterfaceImplementerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"ManagerChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_interfaceHash\",\"type\":\"bytes32\"}],\"name\":\"getInterfaceImplementer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"implementsERC165Interface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"implementsERC165InterfaceNoCache\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"interfaceName\",\"type\":\"string\"}],\"name\":\"interfaceHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_interfaceHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"implementer\",\"type\":\"address\"}],\"name\":\"setInterfaceImplementer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"setManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"updateERC165Cache\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the global ERC1820 Registry, as defined in the https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register implementers for interfaces in this registry, as well as query support. Implementers may be shared by multiple accounts, and can also implement more than a single interface for each account. Contracts can implement interfaces for themselves, but externally-owned accounts (EOA) must delegate this to a contract. {IERC165} interfaces can also be queried via the registry. For an in-depth explanation and source code analysis, see the EIP text.\",\"kind\":\"dev\",\"methods\":{\"getInterfaceImplementer(address,bytes32)\":{\"details\":\"Returns the implementer of `interfaceHash` for `account`. If no such implementer is registered, returns the zero address. If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28 zeroes), `account` will be queried for support of it. `account` being the zero address is an alias for the caller's address.\"},\"getManager(address)\":{\"details\":\"Returns the manager for `account`. See {setManager}.\"},\"implementsERC165Interface(address,bytes4)\":{\"params\":{\"account\":\"Address of the contract to check.\",\"interfaceId\":\"ERC165 interface to check.\"},\"returns\":{\"_0\":\"True if `account` implements `interfaceId`, false otherwise.\"}},\"implementsERC165InterfaceNoCache(address,bytes4)\":{\"params\":{\"account\":\"Address of the contract to check.\",\"interfaceId\":\"ERC165 interface to check.\"},\"returns\":{\"_0\":\"True if `account` implements `interfaceId`, false otherwise.\"}},\"interfaceHash(string)\":{\"details\":\"Returns the interface hash for an `interfaceName`, as defined in the corresponding https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP].\"},\"setInterfaceImplementer(address,bytes32,address)\":{\"details\":\"Sets the `implementer` contract as ``account``'s implementer for `interfaceHash`. `account` being the zero address is an alias for the caller's address. The zero address can also be used in `implementer` to remove an old one. See {interfaceHash} to learn how these are created. Emits an {InterfaceImplementerSet} event. Requirements: - the caller must be the current manager for `account`. - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not end in 28 zeroes). - `implementer` must implement {IERC1820Implementer} and return true when queried for support, unless `implementer` is the caller. See {IERC1820Implementer-canImplementInterfaceForAddress}.\"},\"setManager(address,address)\":{\"details\":\"Sets `newManager` as the manager for `account`. A manager of an account is able to set interface implementers for it. By default, each account is its own manager. Passing a value of `0x0` in `newManager` will reset the manager to this initial state. Emits a {ManagerChanged} event. Requirements: - the caller must be the current manager for `account`.\"},\"updateERC165Cache(address,bytes4)\":{\"params\":{\"account\":\"Address of the contract for which to update the cache.\",\"interfaceId\":\"ERC165 interface for which to update the cache.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"implementsERC165Interface(address,bytes4)\":{\"notice\":\"Checks whether a contract implements an ERC165 interface or not. If the result is not cached a direct lookup on the contract address is performed. If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling {updateERC165Cache} with the contract address.\"},\"implementsERC165InterfaceNoCache(address,bytes4)\":{\"notice\":\"Checks whether a contract implements an ERC165 interface or not without using or updating the cache.\"},\"updateERC165Cache(address,bytes4)\":{\"notice\":\"Updates the cache with whether the contract implements an ERC165 interface or not.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol\":\"IERC1820Registry\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol\":{\"keccak256\":\"0x42f11bff9d625194645e74f01a3cf8f69a3979f07becfa293f75757cabb92050\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dc35b43a667c38d0868c20d648ccb2ec4107bcc1e77ce4fc79ce4938cb51a6d\",\"dweb:/ipfs/QmbwauNDkoLnWYB2owGeZBYWz2y7ZejdC6Q3c5MPZHLnNm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"implementsERC165Interface(address,bytes4)": {
								"notice": "Checks whether a contract implements an ERC165 interface or not. If the result is not cached a direct lookup on the contract address is performed. If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling {updateERC165Cache} with the contract address."
							},
							"implementsERC165InterfaceNoCache(address,bytes4)": {
								"notice": "Checks whether a contract implements an ERC165 interface or not without using or updating the cache."
							},
							"updateERC165Cache(address,bytes4)": {
								"notice": "Updates the cache with whether the contract implements an ERC165 interface or not."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/Merit.sol": {
				"Merit": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC777",
									"name": "token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "givers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "userData",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "tokensReceived",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"tokensReceived(address,address,address,uint256,bytes,bytes)": {
								"details": "Called by an {IERC777} token contract whenever tokens are being moved or created into a registered account (`to`). The type of operation is conveyed by `from` being the zero address or not. This call occurs _after_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the post-operation state. This function may revert to prevent the operation from being executed."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Merit.sol\":262:1292  contract Merit is IERC777Recipient {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Merit.sol\":445:487  0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24 */\n  0x1820a4b7618bde71dce8cdc73aab6c95905fad24\n    /* \"contracts/Merit.sol\":392:488  IERC1820Registry private _erc1820 = IERC1820Registry(0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24) */\n  0x03\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Merit.sol\":625:818  constructor(IERC777 token) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Merit.sol\":663:671  _erc1820 */\n  0x03\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Merit.sol\":663:695  _erc1820.setInterfaceImplementer */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x29965a1d\n    /* \"contracts/Merit.sol\":704:708  this */\n  address\n    /* \"contracts/Merit.sol\":553:619  0xb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b */\n  0xb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b\n    /* \"contracts/Merit.sol\":711:742  TOKENS_RECIPIENT_INTERFACE_HASH */\n  0x00\n  shl\n    /* \"contracts/Merit.sol\":752:756  this */\n  address\n    /* \"contracts/Merit.sol\":663:758  _erc1820.setInterfaceImplementer(address(this), TOKENS_RECIPIENT_INTERFACE_HASH, address(this)) */\n  mload(0x40)\n  dup5\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  tag_6\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_8\n  jumpi\n  0x00\n  dup1\n  revert\ntag_8:\n  pop\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_10\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_10:\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/Merit.sol\":777:787  msg.sender */\n  caller\n    /* \"contracts/Merit.sol\":768:774  _owner */\n  0x01\n  0x00\n    /* \"contracts/Merit.sol\":768:787  _owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Merit.sol\":806:811  token */\n  dup1\n    /* \"contracts/Merit.sol\":797:803  _token */\n  0x02\n  0x00\n    /* \"contracts/Merit.sol\":797:811  _token = token */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Merit.sol\":625:818  constructor(IERC777 token) {... */\n  pop\n    /* \"contracts/Merit.sol\":262:1292  contract Merit is IERC777Recipient {... */\n  jump(tag_11)\n    /* \"#utility.yul\":88:205   */\ntag_13:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_15:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_16:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_29\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_15\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:679   */\ntag_17:\n    /* \"#utility.yul\":620:627   */\n  0x00\n    /* \"#utility.yul\":649:673   */\n  tag_31\n    /* \"#utility.yul\":667:672   */\n  dup3\n    /* \"#utility.yul\":649:673   */\n  tag_16\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":638:673   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:679   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":685:837   */\ntag_18:\n    /* \"#utility.yul\":773:812   */\n  tag_33\n    /* \"#utility.yul\":806:811   */\n  dup2\n    /* \"#utility.yul\":773:812   */\n  tag_17\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":766:771   */\n  dup2\n    /* \"#utility.yul\":763:813   */\n  eq\n    /* \"#utility.yul\":753:831   */\n  tag_34\n  jumpi\n    /* \"#utility.yul\":827:828   */\n  0x00\n    /* \"#utility.yul\":824:825   */\n  dup1\n    /* \"#utility.yul\":817:829   */\n  revert\n    /* \"#utility.yul\":753:831   */\ntag_34:\n    /* \"#utility.yul\":685:837   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":843:1016   */\ntag_19:\n    /* \"#utility.yul\":915:920   */\n  0x00\n    /* \"#utility.yul\":946:952   */\n  dup2\n    /* \"#utility.yul\":940:953   */\n  mload\n    /* \"#utility.yul\":931:953   */\n  swap1\n  pop\n    /* \"#utility.yul\":962:1010   */\n  tag_36\n    /* \"#utility.yul\":1004:1009   */\n  dup2\n    /* \"#utility.yul\":962:1010   */\n  tag_18\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":843:1016   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1022:1403   */\ntag_3:\n    /* \"#utility.yul\":1107:1113   */\n  0x00\n    /* \"#utility.yul\":1156:1158   */\n  0x20\n    /* \"#utility.yul\":1144:1153   */\n  dup3\n    /* \"#utility.yul\":1135:1142   */\n  dup5\n    /* \"#utility.yul\":1131:1154   */\n  sub\n    /* \"#utility.yul\":1127:1159   */\n  slt\n    /* \"#utility.yul\":1124:1243   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1162:1241   */\n  tag_39\n  tag_13\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1124:1243   */\ntag_38:\n    /* \"#utility.yul\":1282:1283   */\n  0x00\n    /* \"#utility.yul\":1307:1386   */\n  tag_40\n    /* \"#utility.yul\":1378:1385   */\n  dup5\n    /* \"#utility.yul\":1369:1375   */\n  dup3\n    /* \"#utility.yul\":1358:1367   */\n  dup6\n    /* \"#utility.yul\":1354:1376   */\n  add\n    /* \"#utility.yul\":1307:1386   */\n  tag_19\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1297:1386   */\n  swap2\n  pop\n    /* \"#utility.yul\":1253:1396   */\n  pop\n    /* \"#utility.yul\":1022:1403   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1409:1527   */\ntag_20:\n    /* \"#utility.yul\":1496:1520   */\n  tag_42\n    /* \"#utility.yul\":1514:1519   */\n  dup2\n    /* \"#utility.yul\":1496:1520   */\n  tag_16\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1491:1494   */\n  dup3\n    /* \"#utility.yul\":1484:1521   */\n  mstore\n    /* \"#utility.yul\":1409:1527   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1533:1610   */\ntag_21:\n    /* \"#utility.yul\":1570:1577   */\n  0x00\n    /* \"#utility.yul\":1599:1604   */\n  dup2\n    /* \"#utility.yul\":1588:1604   */\n  swap1\n  pop\n    /* \"#utility.yul\":1533:1610   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1616:1734   */\ntag_22:\n    /* \"#utility.yul\":1703:1727   */\n  tag_45\n    /* \"#utility.yul\":1721:1726   */\n  dup2\n    /* \"#utility.yul\":1703:1727   */\n  tag_21\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1698:1701   */\n  dup3\n    /* \"#utility.yul\":1691:1728   */\n  mstore\n    /* \"#utility.yul\":1616:1734   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1740:2182   */\ntag_7:\n    /* \"#utility.yul\":1889:1893   */\n  0x00\n    /* \"#utility.yul\":1927:1929   */\n  0x60\n    /* \"#utility.yul\":1916:1925   */\n  dup3\n    /* \"#utility.yul\":1912:1930   */\n  add\n    /* \"#utility.yul\":1904:1930   */\n  swap1\n  pop\n    /* \"#utility.yul\":1940:2011   */\n  tag_47\n    /* \"#utility.yul\":2008:2009   */\n  0x00\n    /* \"#utility.yul\":1997:2006   */\n  dup4\n    /* \"#utility.yul\":1993:2010   */\n  add\n    /* \"#utility.yul\":1984:1990   */\n  dup7\n    /* \"#utility.yul\":1940:2011   */\n  tag_20\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":2021:2093   */\n  tag_48\n    /* \"#utility.yul\":2089:2091   */\n  0x20\n    /* \"#utility.yul\":2078:2087   */\n  dup4\n    /* \"#utility.yul\":2074:2092   */\n  add\n    /* \"#utility.yul\":2065:2071   */\n  dup6\n    /* \"#utility.yul\":2021:2093   */\n  tag_22\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":2103:2175   */\n  tag_49\n    /* \"#utility.yul\":2171:2173   */\n  0x40\n    /* \"#utility.yul\":2160:2169   */\n  dup4\n    /* \"#utility.yul\":2156:2174   */\n  add\n    /* \"#utility.yul\":2147:2153   */\n  dup5\n    /* \"#utility.yul\":2103:2175   */\n  tag_20\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1740:2182   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Merit.sol\":262:1292  contract Merit is IERC777Recipient {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Merit.sol\":262:1292  contract Merit is IERC777Recipient {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x23de29\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xe89081f8\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Merit.sol\":824:1022  function tokensReceived(address operator,address from,address to,uint amount,  ... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      stop\n        /* \"contracts/Merit.sol\":1028:1289  function  withdraw() external  {... */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      stop\n        /* \"contracts/Merit.sol\":308:346  mapping(address => uint) public givers */\n    tag_5:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Merit.sol\":824:1022  function tokensReceived(address operator,address from,address to,uint amount,  ... */\n    tag_9:\n        /* \"contracts/Merit.sol\":1009:1015  amount */\n      dup5\n        /* \"contracts/Merit.sol\":993:999  givers */\n      0x00\n        /* \"contracts/Merit.sol\":993:1005  givers[from] */\n      dup1\n        /* \"contracts/Merit.sol\":1000:1004  from */\n      dup10\n        /* \"contracts/Merit.sol\":993:1005  givers[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Merit.sol\":993:1015  givers[from] += amount */\n      dup3\n      dup3\n      sload\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Merit.sol\":824:1022  function tokensReceived(address operator,address from,address to,uint amount,  ... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Merit.sol\":1028:1289  function  withdraw() external  {... */\n    tag_11:\n        /* \"contracts/Merit.sol\":1091:1097  _owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Merit.sol\":1077:1097  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Merit.sol\":1077:1087  msg.sender */\n      caller\n        /* \"contracts/Merit.sol\":1077:1097  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Merit.sol\":1069:1115  require(msg.sender == _owner, \"no permission\") */\n      tag_22\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_23\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_22:\n        /* \"contracts/Merit.sol\":1170:1182  uint balance */\n      0x00\n        /* \"contracts/Merit.sol\":1185:1191  _token */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Merit.sol\":1185:1201  _token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Merit.sol\":1210:1214  this */\n      address\n        /* \"contracts/Merit.sol\":1185:1216  _token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_28\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_28:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n        /* \"contracts/Merit.sol\":1170:1216  uint balance = _token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/Merit.sol\":1250:1256  _token */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Merit.sol\":1250:1261  _token.send */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9bd9bbc6\n        /* \"contracts/Merit.sol\":1262:1268  _owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Merit.sol\":1270:1277  balance */\n      dup4\n        /* \"contracts/Merit.sol\":1250:1282  _token.send(_owner, balance, \"\") */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_31\n      swap3\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_35\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_35:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Merit.sol\":1059:1289  {... */\n      pop\n        /* \"contracts/Merit.sol\":1028:1289  function  withdraw() external  {... */\n      jump\t// out\n        /* \"contracts/Merit.sol\":308:346  mapping(address => uint) public givers */\n    tag_15:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_37:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_38:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_39:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_40:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_66\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_39\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_41:\n        /* \"#utility.yul\":641:665   */\n      tag_68\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_40\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_69\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_69:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_42:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_71\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_41\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_43:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_44:\n        /* \"#utility.yul\":997:1021   */\n      tag_74\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_43\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_75\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_75:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_45:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_77\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_44\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1314   */\n    tag_46:\n        /* \"#utility.yul\":1306:1307   */\n      0x00\n        /* \"#utility.yul\":1303:1304   */\n      dup1\n        /* \"#utility.yul\":1296:1308   */\n      revert\n        /* \"#utility.yul\":1320:1437   */\n    tag_47:\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1426:1427   */\n      dup1\n        /* \"#utility.yul\":1419:1431   */\n      revert\n        /* \"#utility.yul\":1443:1560   */\n    tag_48:\n        /* \"#utility.yul\":1552:1553   */\n      0x00\n        /* \"#utility.yul\":1549:1550   */\n      dup1\n        /* \"#utility.yul\":1542:1554   */\n      revert\n        /* \"#utility.yul\":1579:2131   */\n    tag_49:\n        /* \"#utility.yul\":1636:1644   */\n      0x00\n        /* \"#utility.yul\":1646:1652   */\n      dup1\n        /* \"#utility.yul\":1696:1699   */\n      dup4\n        /* \"#utility.yul\":1689:1693   */\n      0x1f\n        /* \"#utility.yul\":1681:1687   */\n      dup5\n        /* \"#utility.yul\":1677:1694   */\n      add\n        /* \"#utility.yul\":1673:1700   */\n      slt\n        /* \"#utility.yul\":1663:1785   */\n      tag_82\n      jumpi\n        /* \"#utility.yul\":1704:1783   */\n      tag_83\n      tag_46\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":1663:1785   */\n    tag_82:\n        /* \"#utility.yul\":1817:1823   */\n      dup3\n        /* \"#utility.yul\":1804:1824   */\n      calldataload\n        /* \"#utility.yul\":1794:1824   */\n      swap1\n      pop\n        /* \"#utility.yul\":1847:1865   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1839:1845   */\n      dup2\n        /* \"#utility.yul\":1836:1866   */\n      gt\n        /* \"#utility.yul\":1833:1950   */\n      iszero\n      tag_84\n      jumpi\n        /* \"#utility.yul\":1869:1948   */\n      tag_85\n      tag_47\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":1833:1950   */\n    tag_84:\n        /* \"#utility.yul\":1983:1987   */\n      0x20\n        /* \"#utility.yul\":1975:1981   */\n      dup4\n        /* \"#utility.yul\":1971:1988   */\n      add\n        /* \"#utility.yul\":1959:1988   */\n      swap2\n      pop\n        /* \"#utility.yul\":2037:2040   */\n      dup4\n        /* \"#utility.yul\":2029:2033   */\n      0x01\n        /* \"#utility.yul\":2021:2027   */\n      dup3\n        /* \"#utility.yul\":2017:2034   */\n      mul\n        /* \"#utility.yul\":2007:2015   */\n      dup4\n        /* \"#utility.yul\":2003:2035   */\n      add\n        /* \"#utility.yul\":2000:2041   */\n      gt\n        /* \"#utility.yul\":1997:2125   */\n      iszero\n      tag_86\n      jumpi\n        /* \"#utility.yul\":2044:2123   */\n      tag_87\n      tag_48\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":1997:2125   */\n    tag_86:\n        /* \"#utility.yul\":1579:2131   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2137:3590   */\n    tag_8:\n        /* \"#utility.yul\":2263:2269   */\n      0x00\n        /* \"#utility.yul\":2271:2277   */\n      dup1\n        /* \"#utility.yul\":2279:2285   */\n      0x00\n        /* \"#utility.yul\":2287:2293   */\n      dup1\n        /* \"#utility.yul\":2295:2301   */\n      0x00\n        /* \"#utility.yul\":2303:2309   */\n      dup1\n        /* \"#utility.yul\":2311:2317   */\n      0x00\n        /* \"#utility.yul\":2319:2325   */\n      dup1\n        /* \"#utility.yul\":2368:2371   */\n      0xc0\n        /* \"#utility.yul\":2356:2365   */\n      dup10\n        /* \"#utility.yul\":2347:2354   */\n      dup12\n        /* \"#utility.yul\":2343:2366   */\n      sub\n        /* \"#utility.yul\":2339:2372   */\n      slt\n        /* \"#utility.yul\":2336:2456   */\n      iszero\n      tag_89\n      jumpi\n        /* \"#utility.yul\":2375:2454   */\n      tag_90\n      tag_37\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":2336:2456   */\n    tag_89:\n        /* \"#utility.yul\":2495:2496   */\n      0x00\n        /* \"#utility.yul\":2520:2573   */\n      tag_91\n        /* \"#utility.yul\":2565:2572   */\n      dup12\n        /* \"#utility.yul\":2556:2562   */\n      dup3\n        /* \"#utility.yul\":2545:2554   */\n      dup13\n        /* \"#utility.yul\":2541:2563   */\n      add\n        /* \"#utility.yul\":2520:2573   */\n      tag_42\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":2510:2573   */\n      swap9\n      pop\n        /* \"#utility.yul\":2466:2583   */\n      pop\n        /* \"#utility.yul\":2622:2624   */\n      0x20\n        /* \"#utility.yul\":2648:2701   */\n      tag_92\n        /* \"#utility.yul\":2693:2700   */\n      dup12\n        /* \"#utility.yul\":2684:2690   */\n      dup3\n        /* \"#utility.yul\":2673:2682   */\n      dup13\n        /* \"#utility.yul\":2669:2691   */\n      add\n        /* \"#utility.yul\":2648:2701   */\n      tag_42\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":2638:2701   */\n      swap8\n      pop\n        /* \"#utility.yul\":2593:2711   */\n      pop\n        /* \"#utility.yul\":2750:2752   */\n      0x40\n        /* \"#utility.yul\":2776:2829   */\n      tag_93\n        /* \"#utility.yul\":2821:2828   */\n      dup12\n        /* \"#utility.yul\":2812:2818   */\n      dup3\n        /* \"#utility.yul\":2801:2810   */\n      dup13\n        /* \"#utility.yul\":2797:2819   */\n      add\n        /* \"#utility.yul\":2776:2829   */\n      tag_42\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":2766:2829   */\n      swap7\n      pop\n        /* \"#utility.yul\":2721:2839   */\n      pop\n        /* \"#utility.yul\":2878:2880   */\n      0x60\n        /* \"#utility.yul\":2904:2957   */\n      tag_94\n        /* \"#utility.yul\":2949:2956   */\n      dup12\n        /* \"#utility.yul\":2940:2946   */\n      dup3\n        /* \"#utility.yul\":2929:2938   */\n      dup13\n        /* \"#utility.yul\":2925:2947   */\n      add\n        /* \"#utility.yul\":2904:2957   */\n      tag_45\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":2894:2957   */\n      swap6\n      pop\n        /* \"#utility.yul\":2849:2967   */\n      pop\n        /* \"#utility.yul\":3034:3037   */\n      0x80\n        /* \"#utility.yul\":3023:3032   */\n      dup10\n        /* \"#utility.yul\":3019:3038   */\n      add\n        /* \"#utility.yul\":3006:3039   */\n      calldataload\n        /* \"#utility.yul\":3066:3084   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3058:3064   */\n      dup2\n        /* \"#utility.yul\":3055:3085   */\n      gt\n        /* \"#utility.yul\":3052:3169   */\n      iszero\n      tag_95\n      jumpi\n        /* \"#utility.yul\":3088:3167   */\n      tag_96\n      tag_38\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":3052:3169   */\n    tag_95:\n        /* \"#utility.yul\":3201:3265   */\n      tag_97\n        /* \"#utility.yul\":3257:3264   */\n      dup12\n        /* \"#utility.yul\":3248:3254   */\n      dup3\n        /* \"#utility.yul\":3237:3246   */\n      dup13\n        /* \"#utility.yul\":3233:3255   */\n      add\n        /* \"#utility.yul\":3201:3265   */\n      tag_49\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":3183:3265   */\n      swap5\n      pop\n      swap5\n      pop\n        /* \"#utility.yul\":2977:3275   */\n      pop\n        /* \"#utility.yul\":3342:3345   */\n      0xa0\n        /* \"#utility.yul\":3331:3340   */\n      dup10\n        /* \"#utility.yul\":3327:3346   */\n      add\n        /* \"#utility.yul\":3314:3347   */\n      calldataload\n        /* \"#utility.yul\":3374:3392   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3366:3372   */\n      dup2\n        /* \"#utility.yul\":3363:3393   */\n      gt\n        /* \"#utility.yul\":3360:3477   */\n      iszero\n      tag_98\n      jumpi\n        /* \"#utility.yul\":3396:3475   */\n      tag_99\n      tag_38\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":3360:3477   */\n    tag_98:\n        /* \"#utility.yul\":3509:3573   */\n      tag_100\n        /* \"#utility.yul\":3565:3572   */\n      dup12\n        /* \"#utility.yul\":3556:3562   */\n      dup3\n        /* \"#utility.yul\":3545:3554   */\n      dup13\n        /* \"#utility.yul\":3541:3563   */\n      add\n        /* \"#utility.yul\":3509:3573   */\n      tag_49\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":3491:3573   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":3285:3583   */\n      pop\n        /* \"#utility.yul\":2137:3590   */\n      swap3\n      swap6\n      swap9\n      pop\n      swap3\n      swap6\n      swap9\n      swap1\n      swap4\n      swap7\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3596:3925   */\n    tag_14:\n        /* \"#utility.yul\":3655:3661   */\n      0x00\n        /* \"#utility.yul\":3704:3706   */\n      0x20\n        /* \"#utility.yul\":3692:3701   */\n      dup3\n        /* \"#utility.yul\":3683:3690   */\n      dup5\n        /* \"#utility.yul\":3679:3702   */\n      sub\n        /* \"#utility.yul\":3675:3707   */\n      slt\n        /* \"#utility.yul\":3672:3791   */\n      iszero\n      tag_102\n      jumpi\n        /* \"#utility.yul\":3710:3789   */\n      tag_103\n      tag_37\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":3672:3791   */\n    tag_102:\n        /* \"#utility.yul\":3830:3831   */\n      0x00\n        /* \"#utility.yul\":3855:3908   */\n      tag_104\n        /* \"#utility.yul\":3900:3907   */\n      dup5\n        /* \"#utility.yul\":3891:3897   */\n      dup3\n        /* \"#utility.yul\":3880:3889   */\n      dup6\n        /* \"#utility.yul\":3876:3898   */\n      add\n        /* \"#utility.yul\":3855:3908   */\n      tag_42\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":3845:3908   */\n      swap2\n      pop\n        /* \"#utility.yul\":3801:3918   */\n      pop\n        /* \"#utility.yul\":3596:3925   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3931:4049   */\n    tag_50:\n        /* \"#utility.yul\":4018:4042   */\n      tag_106\n        /* \"#utility.yul\":4036:4041   */\n      dup2\n        /* \"#utility.yul\":4018:4042   */\n      tag_43\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":4013:4016   */\n      dup3\n        /* \"#utility.yul\":4006:4043   */\n      mstore\n        /* \"#utility.yul\":3931:4049   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4055:4277   */\n    tag_17:\n        /* \"#utility.yul\":4148:4152   */\n      0x00\n        /* \"#utility.yul\":4186:4188   */\n      0x20\n        /* \"#utility.yul\":4175:4184   */\n      dup3\n        /* \"#utility.yul\":4171:4189   */\n      add\n        /* \"#utility.yul\":4163:4189   */\n      swap1\n      pop\n        /* \"#utility.yul\":4199:4270   */\n      tag_108\n        /* \"#utility.yul\":4267:4268   */\n      0x00\n        /* \"#utility.yul\":4256:4265   */\n      dup4\n        /* \"#utility.yul\":4252:4269   */\n      add\n        /* \"#utility.yul\":4243:4249   */\n      dup5\n        /* \"#utility.yul\":4199:4270   */\n      tag_50\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":4055:4277   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4283:4463   */\n    tag_51:\n        /* \"#utility.yul\":4331:4408   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4328:4329   */\n      0x00\n        /* \"#utility.yul\":4321:4409   */\n      mstore\n        /* \"#utility.yul\":4428:4432   */\n      0x11\n        /* \"#utility.yul\":4425:4426   */\n      0x04\n        /* \"#utility.yul\":4418:4433   */\n      mstore\n        /* \"#utility.yul\":4452:4456   */\n      0x24\n        /* \"#utility.yul\":4449:4450   */\n      0x00\n        /* \"#utility.yul\":4442:4457   */\n      revert\n        /* \"#utility.yul\":4469:4660   */\n    tag_20:\n        /* \"#utility.yul\":4509:4512   */\n      0x00\n        /* \"#utility.yul\":4528:4548   */\n      tag_111\n        /* \"#utility.yul\":4546:4547   */\n      dup3\n        /* \"#utility.yul\":4528:4548   */\n      tag_43\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":4523:4548   */\n      swap2\n      pop\n        /* \"#utility.yul\":4562:4582   */\n      tag_112\n        /* \"#utility.yul\":4580:4581   */\n      dup4\n        /* \"#utility.yul\":4562:4582   */\n      tag_43\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":4557:4582   */\n      swap3\n      pop\n        /* \"#utility.yul\":4605:4606   */\n      dup3\n        /* \"#utility.yul\":4602:4603   */\n      dup3\n        /* \"#utility.yul\":4598:4607   */\n      add\n        /* \"#utility.yul\":4591:4607   */\n      swap1\n      pop\n        /* \"#utility.yul\":4626:4629   */\n      dup1\n        /* \"#utility.yul\":4623:4624   */\n      dup3\n        /* \"#utility.yul\":4620:4630   */\n      gt\n        /* \"#utility.yul\":4617:4653   */\n      iszero\n      tag_113\n      jumpi\n        /* \"#utility.yul\":4633:4651   */\n      tag_114\n      tag_51\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":4617:4653   */\n    tag_113:\n        /* \"#utility.yul\":4469:4660   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4666:4835   */\n    tag_52:\n        /* \"#utility.yul\":4750:4761   */\n      0x00\n        /* \"#utility.yul\":4784:4790   */\n      dup3\n        /* \"#utility.yul\":4779:4782   */\n      dup3\n        /* \"#utility.yul\":4772:4791   */\n      mstore\n        /* \"#utility.yul\":4824:4828   */\n      0x20\n        /* \"#utility.yul\":4819:4822   */\n      dup3\n        /* \"#utility.yul\":4815:4829   */\n      add\n        /* \"#utility.yul\":4800:4829   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4841:5004   */\n    tag_53:\n        /* \"#utility.yul\":4981:4996   */\n      0x6e6f207065726d697373696f6e00000000000000000000000000000000000000\n        /* \"#utility.yul\":4977:4978   */\n      0x00\n        /* \"#utility.yul\":4969:4975   */\n      dup3\n        /* \"#utility.yul\":4965:4979   */\n      add\n        /* \"#utility.yul\":4958:4997   */\n      mstore\n        /* \"#utility.yul\":4841:5004   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5010:5376   */\n    tag_54:\n        /* \"#utility.yul\":5152:5155   */\n      0x00\n        /* \"#utility.yul\":5173:5240   */\n      tag_118\n        /* \"#utility.yul\":5237:5239   */\n      0x0d\n        /* \"#utility.yul\":5232:5235   */\n      dup4\n        /* \"#utility.yul\":5173:5240   */\n      tag_52\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":5166:5240   */\n      swap2\n      pop\n        /* \"#utility.yul\":5249:5342   */\n      tag_119\n        /* \"#utility.yul\":5338:5341   */\n      dup3\n        /* \"#utility.yul\":5249:5342   */\n      tag_53\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":5367:5369   */\n      0x20\n        /* \"#utility.yul\":5362:5365   */\n      dup3\n        /* \"#utility.yul\":5358:5370   */\n      add\n        /* \"#utility.yul\":5351:5370   */\n      swap1\n      pop\n        /* \"#utility.yul\":5010:5376   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5382:5801   */\n    tag_24:\n        /* \"#utility.yul\":5548:5552   */\n      0x00\n        /* \"#utility.yul\":5586:5588   */\n      0x20\n        /* \"#utility.yul\":5575:5584   */\n      dup3\n        /* \"#utility.yul\":5571:5589   */\n      add\n        /* \"#utility.yul\":5563:5589   */\n      swap1\n      pop\n        /* \"#utility.yul\":5635:5644   */\n      dup2\n        /* \"#utility.yul\":5629:5633   */\n      dup2\n        /* \"#utility.yul\":5625:5645   */\n      sub\n        /* \"#utility.yul\":5621:5622   */\n      0x00\n        /* \"#utility.yul\":5610:5619   */\n      dup4\n        /* \"#utility.yul\":5606:5623   */\n      add\n        /* \"#utility.yul\":5599:5646   */\n      mstore\n        /* \"#utility.yul\":5663:5794   */\n      tag_121\n        /* \"#utility.yul\":5789:5793   */\n      dup2\n        /* \"#utility.yul\":5663:5794   */\n      tag_54\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":5655:5794   */\n      swap1\n      pop\n        /* \"#utility.yul\":5382:5801   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5807:5925   */\n    tag_55:\n        /* \"#utility.yul\":5894:5918   */\n      tag_123\n        /* \"#utility.yul\":5912:5917   */\n      dup2\n        /* \"#utility.yul\":5894:5918   */\n      tag_40\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":5889:5892   */\n      dup3\n        /* \"#utility.yul\":5882:5919   */\n      mstore\n        /* \"#utility.yul\":5807:5925   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5931:6153   */\n    tag_26:\n        /* \"#utility.yul\":6024:6028   */\n      0x00\n        /* \"#utility.yul\":6062:6064   */\n      0x20\n        /* \"#utility.yul\":6051:6060   */\n      dup3\n        /* \"#utility.yul\":6047:6065   */\n      add\n        /* \"#utility.yul\":6039:6065   */\n      swap1\n      pop\n        /* \"#utility.yul\":6075:6146   */\n      tag_125\n        /* \"#utility.yul\":6143:6144   */\n      0x00\n        /* \"#utility.yul\":6132:6141   */\n      dup4\n        /* \"#utility.yul\":6128:6145   */\n      add\n        /* \"#utility.yul\":6119:6125   */\n      dup5\n        /* \"#utility.yul\":6075:6146   */\n      tag_55\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":5931:6153   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6159:6302   */\n    tag_56:\n        /* \"#utility.yul\":6216:6221   */\n      0x00\n        /* \"#utility.yul\":6247:6253   */\n      dup2\n        /* \"#utility.yul\":6241:6254   */\n      mload\n        /* \"#utility.yul\":6232:6254   */\n      swap1\n      pop\n        /* \"#utility.yul\":6263:6296   */\n      tag_127\n        /* \"#utility.yul\":6290:6295   */\n      dup2\n        /* \"#utility.yul\":6263:6296   */\n      tag_44\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":6159:6302   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6308:6659   */\n    tag_30:\n        /* \"#utility.yul\":6378:6384   */\n      0x00\n        /* \"#utility.yul\":6427:6429   */\n      0x20\n        /* \"#utility.yul\":6415:6424   */\n      dup3\n        /* \"#utility.yul\":6406:6413   */\n      dup5\n        /* \"#utility.yul\":6402:6425   */\n      sub\n        /* \"#utility.yul\":6398:6430   */\n      slt\n        /* \"#utility.yul\":6395:6514   */\n      iszero\n      tag_129\n      jumpi\n        /* \"#utility.yul\":6433:6512   */\n      tag_130\n      tag_37\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":6395:6514   */\n    tag_129:\n        /* \"#utility.yul\":6553:6554   */\n      0x00\n        /* \"#utility.yul\":6578:6642   */\n      tag_131\n        /* \"#utility.yul\":6634:6641   */\n      dup5\n        /* \"#utility.yul\":6625:6631   */\n      dup3\n        /* \"#utility.yul\":6614:6623   */\n      dup6\n        /* \"#utility.yul\":6610:6632   */\n      add\n        /* \"#utility.yul\":6578:6642   */\n      tag_56\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":6568:6642   */\n      swap2\n      pop\n        /* \"#utility.yul\":6524:6652   */\n      pop\n        /* \"#utility.yul\":6308:6659   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6665:6833   */\n    tag_57:\n        /* \"#utility.yul\":6748:6759   */\n      0x00\n        /* \"#utility.yul\":6782:6788   */\n      dup3\n        /* \"#utility.yul\":6777:6780   */\n      dup3\n        /* \"#utility.yul\":6770:6789   */\n      mstore\n        /* \"#utility.yul\":6822:6826   */\n      0x20\n        /* \"#utility.yul\":6817:6820   */\n      dup3\n        /* \"#utility.yul\":6813:6827   */\n      add\n        /* \"#utility.yul\":6798:6827   */\n      swap1\n      pop\n        /* \"#utility.yul\":6665:6833   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6839:6953   */\n    tag_58:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6959:7321   */\n    tag_59:\n        /* \"#utility.yul\":7100:7103   */\n      0x00\n        /* \"#utility.yul\":7121:7186   */\n      tag_135\n        /* \"#utility.yul\":7184:7185   */\n      0x00\n        /* \"#utility.yul\":7179:7182   */\n      dup4\n        /* \"#utility.yul\":7121:7186   */\n      tag_57\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":7114:7186   */\n      swap2\n      pop\n        /* \"#utility.yul\":7195:7288   */\n      tag_136\n        /* \"#utility.yul\":7284:7287   */\n      dup3\n        /* \"#utility.yul\":7195:7288   */\n      tag_58\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":7313:7314   */\n      0x00\n        /* \"#utility.yul\":7308:7311   */\n      dup3\n        /* \"#utility.yul\":7304:7315   */\n      add\n        /* \"#utility.yul\":7297:7315   */\n      swap1\n      pop\n        /* \"#utility.yul\":6959:7321   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7327:7964   */\n    tag_32:\n        /* \"#utility.yul\":7548:7552   */\n      0x00\n        /* \"#utility.yul\":7586:7588   */\n      0x60\n        /* \"#utility.yul\":7575:7584   */\n      dup3\n        /* \"#utility.yul\":7571:7589   */\n      add\n        /* \"#utility.yul\":7563:7589   */\n      swap1\n      pop\n        /* \"#utility.yul\":7599:7670   */\n      tag_138\n        /* \"#utility.yul\":7667:7668   */\n      0x00\n        /* \"#utility.yul\":7656:7665   */\n      dup4\n        /* \"#utility.yul\":7652:7669   */\n      add\n        /* \"#utility.yul\":7643:7649   */\n      dup6\n        /* \"#utility.yul\":7599:7670   */\n      tag_55\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":7680:7752   */\n      tag_139\n        /* \"#utility.yul\":7748:7750   */\n      0x20\n        /* \"#utility.yul\":7737:7746   */\n      dup4\n        /* \"#utility.yul\":7733:7751   */\n      add\n        /* \"#utility.yul\":7724:7730   */\n      dup5\n        /* \"#utility.yul\":7680:7752   */\n      tag_50\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":7799:7808   */\n      dup2\n        /* \"#utility.yul\":7793:7797   */\n      dup2\n        /* \"#utility.yul\":7789:7809   */\n      sub\n        /* \"#utility.yul\":7784:7786   */\n      0x40\n        /* \"#utility.yul\":7773:7782   */\n      dup4\n        /* \"#utility.yul\":7769:7787   */\n      add\n        /* \"#utility.yul\":7762:7810   */\n      mstore\n        /* \"#utility.yul\":7827:7957   */\n      tag_140\n        /* \"#utility.yul\":7952:7956   */\n      dup2\n        /* \"#utility.yul\":7827:7957   */\n      tag_59\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":7819:7957   */\n      swap1\n      pop\n        /* \"#utility.yul\":7327:7964   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204e0745d55ebadfe5bf568dc076a76918c14cfd9645ca4e27cdc1fe47a80518e464736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_327": {
									"entryPoint": null,
									"id": 327,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_IERC777_$162_fromMemory": {
									"entryPoint": 531,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC777_$162_fromMemory": {
									"entryPoint": 551,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 594,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 618,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_bytes32_t_address__to_t_address_t_bytes32_t_address__fromStack_reversed": {
									"entryPoint": 633,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 475,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC777_$162": {
									"entryPoint": 492,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 444,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 440,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC777_$162": {
									"entryPoint": 509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2185:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "667:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "649:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "649:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "638:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC777_$162",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "610:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "620:7:4",
														"type": ""
													}
												],
												"src": "568:111:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "743:94:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "815:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "824:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "827:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "817:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "817:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "817:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "766:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "806:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC777_$162",
																					"nodeType": "YulIdentifier",
																					"src": "773:32:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "773:39:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "763:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "763:50:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "756:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "756:58:4"
															},
															"nodeType": "YulIf",
															"src": "753:78:4"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC777_$162",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "736:5:4",
														"type": ""
													}
												],
												"src": "685:152:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "921:95:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "931:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "946:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "940:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "940:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "931:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1004:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC777_$162",
																	"nodeType": "YulIdentifier",
																	"src": "962:41:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "962:48:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "962:48:4"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC777_$162_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "899:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "907:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "915:5:4",
														"type": ""
													}
												],
												"src": "843:173:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1114:289:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1160:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1162:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1162:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1162:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1135:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1144:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1131:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1131:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1156:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1127:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:32:4"
															},
															"nodeType": "YulIf",
															"src": "1124:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1253:143:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1268:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1282:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1272:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1297:89:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1358:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1369:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1354:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1354:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1378:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC777_$162_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1307:46:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1307:79:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1297:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC777_$162_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1084:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1095:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1107:6:4",
														"type": ""
													}
												],
												"src": "1022:381:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1474:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1491:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1514:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1496:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1496:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1484:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1484:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1484:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1462:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1469:3:4",
														"type": ""
													}
												],
												"src": "1409:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1578:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1588:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1599:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1588:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1560:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1570:7:4",
														"type": ""
													}
												],
												"src": "1533:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1681:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1698:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1721:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "1703:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1703:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1691:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1691:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1691:37:4"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1669:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1676:3:4",
														"type": ""
													}
												],
												"src": "1616:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1894:288:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1904:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1916:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1927:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1912:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1912:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1904:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1984:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1997:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2008:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1993:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1993:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1940:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1940:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1940:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2078:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2089:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2074:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2074:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2021:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2021:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2021:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2147:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2160:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2171:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2156:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2156:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2103:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2103:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2103:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32_t_address__to_t_address_t_bytes32_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1850:9:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1862:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1870:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1878:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1889:4:4",
														"type": ""
													}
												],
												"src": "1740:442:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC777_$162(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC777_$162(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC777_$162(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC777_$162_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC777_$162(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC777_$162_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC777_$162_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32_t_address__to_t_address_t_bytes32_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052731820a4b7618bde71dce8cdc73aab6c95905fad2460035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550348015610063575f80fd5b5060405161099038038061099083398181016040528101906100859190610227565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166329965a1d307fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b5f1b306040518463ffffffff1660e01b815260040161010593929190610279565b5f604051808303815f87803b15801561011c575f80fd5b505af115801561012e573d5f803e3d5ffd5b505050503360015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506102ae565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101e5826101bc565b9050919050565b5f6101f6826101db565b9050919050565b610206816101ec565b8114610210575f80fd5b50565b5f81519050610221816101fd565b92915050565b5f6020828403121561023c5761023b6101b8565b5b5f61024984828501610213565b91505092915050565b61025b816101db565b82525050565b5f819050919050565b61027381610261565b82525050565b5f60608201905061028c5f830186610252565b610299602083018561026a565b6102a66040830184610252565b949350505050565b6106d5806102bb5f395ff3fe608060405234801561000f575f80fd5b506004361061003e575f3560e01c806223de29146100425780633ccfd60b1461005e578063e89081f814610068575b5f80fd5b61005c600480360381019061005791906103d6565b610098565b005b6100666100f4565b005b610082600480360381019061007d91906104a0565b6102cc565b60405161008f91906104da565b60405180910390f35b845f808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546100e39190610520565b925050819055505050505050505050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610183576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017a906105ad565b60405180910390fd5b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016101de91906105da565b602060405180830381865afa1580156101f9573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061021d9190610607565b905060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639bd9bbc660015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b815260040161029c929190610665565b5f604051808303815f87803b1580156102b3575f80fd5b505af11580156102c5573d5f803e3d5ffd5b5050505050565b5f602052805f5260405f205f915090505481565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610311826102e8565b9050919050565b61032181610307565b811461032b575f80fd5b50565b5f8135905061033c81610318565b92915050565b5f819050919050565b61035481610342565b811461035e575f80fd5b50565b5f8135905061036f8161034b565b92915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f84011261039657610395610375565b5b8235905067ffffffffffffffff8111156103b3576103b2610379565b5b6020830191508360018202830111156103cf576103ce61037d565b5b9250929050565b5f805f805f805f8060c0898b0312156103f2576103f16102e0565b5b5f6103ff8b828c0161032e565b98505060206104108b828c0161032e565b97505060406104218b828c0161032e565b96505060606104328b828c01610361565b955050608089013567ffffffffffffffff811115610453576104526102e4565b5b61045f8b828c01610381565b945094505060a089013567ffffffffffffffff811115610482576104816102e4565b5b61048e8b828c01610381565b92509250509295985092959890939650565b5f602082840312156104b5576104b46102e0565b5b5f6104c28482850161032e565b91505092915050565b6104d481610342565b82525050565b5f6020820190506104ed5f8301846104cb565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61052a82610342565b915061053583610342565b925082820190508082111561054d5761054c6104f3565b5b92915050565b5f82825260208201905092915050565b7f6e6f207065726d697373696f6e000000000000000000000000000000000000005f82015250565b5f610597600d83610553565b91506105a282610563565b602082019050919050565b5f6020820190508181035f8301526105c48161058b565b9050919050565b6105d481610307565b82525050565b5f6020820190506105ed5f8301846105cb565b92915050565b5f815190506106018161034b565b92915050565b5f6020828403121561061c5761061b6102e0565b5b5f610629848285016105f3565b91505092915050565b5f82825260208201905092915050565b50565b5f6106505f83610632565b915061065b82610642565b5f82019050919050565b5f6060820190506106785f8301856105cb565b61068560208301846104cb565b818103604083015261069681610645565b9050939250505056fea26469706673582212204e0745d55ebadfe5bf568dc076a76918c14cfd9645ca4e27cdc1fe47a80518e464736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x63 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x990 CODESIZE SUB DUP1 PUSH2 0x990 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x85 SWAP2 SWAP1 PUSH2 0x227 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x29965A1D ADDRESS PUSH32 0xB281FC8C12954D22544DB45DE3159A39272895B169A852B314F9CC762E44C53B PUSH0 SHL ADDRESS PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x279 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP CALLER PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x2AE JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E5 DUP3 PUSH2 0x1BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F6 DUP3 PUSH2 0x1DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x206 DUP2 PUSH2 0x1EC JUMP JUMPDEST DUP2 EQ PUSH2 0x210 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x221 DUP2 PUSH2 0x1FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23C JUMPI PUSH2 0x23B PUSH2 0x1B8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x249 DUP5 DUP3 DUP6 ADD PUSH2 0x213 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x25B DUP2 PUSH2 0x1DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x273 DUP2 PUSH2 0x261 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x28C PUSH0 DUP4 ADD DUP7 PUSH2 0x252 JUMP JUMPDEST PUSH2 0x299 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x26A JUMP JUMPDEST PUSH2 0x2A6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x252 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x6D5 DUP1 PUSH2 0x2BB PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3E JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x23DE29 EQ PUSH2 0x42 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x5E JUMPI DUP1 PUSH4 0xE89081F8 EQ PUSH2 0x68 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x3D6 JUMP JUMPDEST PUSH2 0x98 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x66 PUSH2 0xF4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x82 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7D SWAP2 SWAP1 PUSH2 0x4A0 JUMP JUMPDEST PUSH2 0x2CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8F SWAP2 SWAP1 PUSH2 0x4DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP5 PUSH0 DUP1 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x520 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x183 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17A SWAP1 PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x5DA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x607 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9BD9BBC6 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29C SWAP3 SWAP2 SWAP1 PUSH2 0x665 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2B3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2C5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x311 DUP3 PUSH2 0x2E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x321 DUP2 PUSH2 0x307 JUMP JUMPDEST DUP2 EQ PUSH2 0x32B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x33C DUP2 PUSH2 0x318 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x354 DUP2 PUSH2 0x342 JUMP JUMPDEST DUP2 EQ PUSH2 0x35E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x36F DUP2 PUSH2 0x34B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x396 JUMPI PUSH2 0x395 PUSH2 0x375 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B3 JUMPI PUSH2 0x3B2 PUSH2 0x379 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x3CF JUMPI PUSH2 0x3CE PUSH2 0x37D JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x3F2 JUMPI PUSH2 0x3F1 PUSH2 0x2E0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3FF DUP12 DUP3 DUP13 ADD PUSH2 0x32E JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x410 DUP12 DUP3 DUP13 ADD PUSH2 0x32E JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x421 DUP12 DUP3 DUP13 ADD PUSH2 0x32E JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x432 DUP12 DUP3 DUP13 ADD PUSH2 0x361 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x453 JUMPI PUSH2 0x452 PUSH2 0x2E4 JUMP JUMPDEST JUMPDEST PUSH2 0x45F DUP12 DUP3 DUP13 ADD PUSH2 0x381 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x482 JUMPI PUSH2 0x481 PUSH2 0x2E4 JUMP JUMPDEST JUMPDEST PUSH2 0x48E DUP12 DUP3 DUP13 ADD PUSH2 0x381 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4B5 JUMPI PUSH2 0x4B4 PUSH2 0x2E0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x4C2 DUP5 DUP3 DUP6 ADD PUSH2 0x32E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4D4 DUP2 PUSH2 0x342 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4ED PUSH0 DUP4 ADD DUP5 PUSH2 0x4CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x52A DUP3 PUSH2 0x342 JUMP JUMPDEST SWAP2 POP PUSH2 0x535 DUP4 PUSH2 0x342 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x54D JUMPI PUSH2 0x54C PUSH2 0x4F3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6E6F207065726D697373696F6E00000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x597 PUSH1 0xD DUP4 PUSH2 0x553 JUMP JUMPDEST SWAP2 POP PUSH2 0x5A2 DUP3 PUSH2 0x563 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5C4 DUP2 PUSH2 0x58B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5D4 DUP2 PUSH2 0x307 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5ED PUSH0 DUP4 ADD DUP5 PUSH2 0x5CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x601 DUP2 PUSH2 0x34B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x61C JUMPI PUSH2 0x61B PUSH2 0x2E0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x629 DUP5 DUP3 DUP6 ADD PUSH2 0x5F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x650 PUSH0 DUP4 PUSH2 0x632 JUMP JUMPDEST SWAP2 POP PUSH2 0x65B DUP3 PUSH2 0x642 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x678 PUSH0 DUP4 ADD DUP6 PUSH2 0x5CB JUMP JUMPDEST PUSH2 0x685 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4CB JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x696 DUP2 PUSH2 0x645 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E SMOD GASLIMIT 0xD5 0x5E 0xBA 0xDF 0xE5 0xBF JUMP DUP14 0xC0 PUSH23 0xA76918C14CFD9645CA4E27CDC1FE47A80518E464736F6C PUSH4 0x43000814 STOP CALLER ",
							"sourceMap": "262:1030:3:-:0;;;445:42;392:96;;;;;;;;;;;;;;;;;;;;625:193;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;663:8;;;;;;;;;;;:32;;;704:4;553:66;711:31;;752:4;663:95;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;777:10;768:6;;:19;;;;;;;;;;;;;;;;;;806:5;797:6;;:14;;;;;;;;;;;;;;;;;;625:193;262:1030;;88:117:4;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:111::-;620:7;649:24;667:5;649:24;:::i;:::-;638:35;;568:111;;;:::o;685:152::-;773:39;806:5;773:39;:::i;:::-;766:5;763:50;753:78;;827:1;824;817:12;753:78;685:152;:::o;843:173::-;915:5;946:6;940:13;931:22;;962:48;1004:5;962:48;:::i;:::-;843:173;;;;:::o;1022:381::-;1107:6;1156:2;1144:9;1135:7;1131:23;1127:32;1124:119;;;1162:79;;:::i;:::-;1124:119;1282:1;1307:79;1378:7;1369:6;1358:9;1354:22;1307:79;:::i;:::-;1297:89;;1253:143;1022:381;;;;:::o;1409:118::-;1496:24;1514:5;1496:24;:::i;:::-;1491:3;1484:37;1409:118;;:::o;1533:77::-;1570:7;1599:5;1588:16;;1533:77;;;:::o;1616:118::-;1703:24;1721:5;1703:24;:::i;:::-;1698:3;1691:37;1616:118;;:::o;1740:442::-;1889:4;1927:2;1916:9;1912:18;1904:26;;1940:71;2008:1;1997:9;1993:17;1984:6;1940:71;:::i;:::-;2021:72;2089:2;2078:9;2074:18;2065:6;2021:72;:::i;:::-;2103;2171:2;2160:9;2156:18;2147:6;2103:72;:::i;:::-;1740:442;;;;;;:::o;262:1030:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@givers_283": {
									"entryPoint": 716,
									"id": 283,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokensReceived_349": {
									"entryPoint": 152,
									"id": 349,
									"parameterSlots": 8,
									"returnSlots": 0
								},
								"@withdraw_379": {
									"entryPoint": 244,
									"id": 379,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 814,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_calldata_ptr": {
									"entryPoint": 897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 865,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_uint256t_bytes_calldata_ptrt_bytes_calldata_ptr": {
									"entryPoint": 982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 8
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1483,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_34b15d85d6796fb603098d6f5b598f1726e3f87f7388833c2a25638759287c67_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1419,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 1605,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1227,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1498,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 1637,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_34b15d85d6796fb603098d6f5b598f1726e3f87f7388833c2a25638759287c67__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1453,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1242,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 1586,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1363,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1312,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 775,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 744,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 834,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1267,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 889,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 885,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 893,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 740,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 736,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_34b15d85d6796fb603098d6f5b598f1726e3f87f7388833c2a25638759287c67": {
									"entryPoint": 1379,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 1602,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 792,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 843,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7967:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:4",
														"type": ""
													}
												],
												"src": "696:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "896:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "907:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "868:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "878:7:4",
														"type": ""
													}
												],
												"src": "841:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "967:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1024:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:43:4"
															},
															"nodeType": "YulIf",
															"src": "977:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "960:5:4",
														"type": ""
													}
												],
												"src": "924:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1104:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1114:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1082:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1090:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1098:5:4",
														"type": ""
													}
												],
												"src": "1052:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1286:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1303:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1306:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1296:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1296:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1296:12:4"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "1197:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1409:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1426:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1419:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1419:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1419:12:4"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nodeType": "YulFunctionDefinition",
												"src": "1320:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1532:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1549:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1542:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1542:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1542:12:4"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "1443:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1653:478:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1702:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "1704:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1704:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1704:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1681:6:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1689:4:4",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1677:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1677:17:4"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1696:3:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1673:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1673:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1666:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1666:35:4"
															},
															"nodeType": "YulIf",
															"src": "1663:122:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1794:30:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1817:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1804:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1804:20:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1794:6:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1867:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nodeType": "YulIdentifier",
																				"src": "1869:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1869:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1869:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1839:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1847:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1836:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1836:30:4"
															},
															"nodeType": "YulIf",
															"src": "1833:117:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1959:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1975:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1983:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1971:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1971:17:4"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "1959:8:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2042:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "2044:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2044:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2044:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nodeType": "YulIdentifier",
																				"src": "2007:8:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "2021:6:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2029:4:4",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "2017:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2017:17:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2003:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2003:32:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2037:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2000:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2000:41:4"
															},
															"nodeType": "YulIf",
															"src": "1997:128:4"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1620:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1628:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "1636:8:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1646:6:4",
														"type": ""
													}
												],
												"src": "1579:552:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2326:1264:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2373:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2375:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2375:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2375:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2347:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2356:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2343:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2343:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2368:3:4",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2339:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2339:33:4"
															},
															"nodeType": "YulIf",
															"src": "2336:120:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "2466:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2481:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2495:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2485:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2510:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2545:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2556:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2541:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2541:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2565:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2520:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2520:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2510:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2593:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2608:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2622:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2612:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2638:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2673:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2684:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2669:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2669:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2693:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2648:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2648:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2638:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2721:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2736:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2750:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2740:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2766:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2801:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2812:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2797:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2797:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2821:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2776:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2776:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2766:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2849:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2864:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2878:2:4",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2868:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2894:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2929:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2940:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2925:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2925:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2949:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2904:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2904:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "2894:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2977:298:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2992:47:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3023:9:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3034:3:4",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3019:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3019:19:4"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3006:12:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3006:33:4"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2996:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3086:83:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3088:77:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3088:79:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3088:79:4"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3058:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3066:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3055:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3055:30:4"
																	},
																	"nodeType": "YulIf",
																	"src": "3052:117:4"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3183:82:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3237:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3248:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3233:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3233:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3257:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3201:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3201:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "3183:6:4"
																		},
																		{
																			"name": "value5",
																			"nodeType": "YulIdentifier",
																			"src": "3191:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3285:298:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3300:47:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3331:9:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3342:3:4",
																						"type": "",
																						"value": "160"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3327:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3327:19:4"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3314:12:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3314:33:4"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3304:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3394:83:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3396:77:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3396:79:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3396:79:4"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3366:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3374:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3363:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3363:30:4"
																	},
																	"nodeType": "YulIf",
																	"src": "3360:117:4"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3491:82:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3545:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3556:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3541:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3541:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3565:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3509:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3509:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nodeType": "YulIdentifier",
																			"src": "3491:6:4"
																		},
																		{
																			"name": "value7",
																			"nodeType": "YulIdentifier",
																			"src": "3499:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_uint256t_bytes_calldata_ptrt_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2240:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2251:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2263:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2271:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2279:6:4",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2287:6:4",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2295:6:4",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "2303:6:4",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "2311:6:4",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "2319:6:4",
														"type": ""
													}
												],
												"src": "2137:1453:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3662:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3708:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3710:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3710:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3710:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3683:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3692:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3679:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3679:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3704:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3675:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3675:32:4"
															},
															"nodeType": "YulIf",
															"src": "3672:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "3801:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3816:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3830:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3820:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3845:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3880:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3891:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3876:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3876:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3900:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3855:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3855:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3845:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3632:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3643:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3655:6:4",
														"type": ""
													}
												],
												"src": "3596:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3996:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4013:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4036:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4018:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4018:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4006:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4006:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4006:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3984:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3991:3:4",
														"type": ""
													}
												],
												"src": "3931:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4153:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4163:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4175:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4186:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4171:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4171:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4163:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4243:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4256:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4267:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4252:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4252:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4199:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4199:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4199:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4125:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4137:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4148:4:4",
														"type": ""
													}
												],
												"src": "4055:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4311:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4328:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4331:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4321:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4321:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4321:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4425:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4428:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4418:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4418:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4418:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4449:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4452:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4442:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4442:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4442:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4283:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4513:147:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4523:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4546:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4528:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4528:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4523:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4557:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4580:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4562:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4562:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4557:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4591:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4602:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4605:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4598:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4598:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4591:3:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4631:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4633:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4633:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4633:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4623:1:4"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "4626:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4620:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4620:10:4"
															},
															"nodeType": "YulIf",
															"src": "4617:36:4"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4500:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4503:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4509:3:4",
														"type": ""
													}
												],
												"src": "4469:191:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4762:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4779:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4784:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4772:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4772:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4772:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4800:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4819:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4824:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4815:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4815:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4800:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4734:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4739:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4750:11:4",
														"type": ""
													}
												],
												"src": "4666:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4947:57:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4969:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4977:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4965:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4965:14:4"
																	},
																	{
																		"hexValue": "6e6f207065726d697373696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4981:15:4",
																		"type": "",
																		"value": "no permission"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4958:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4958:39:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4958:39:4"
														}
													]
												},
												"name": "store_literal_in_memory_34b15d85d6796fb603098d6f5b598f1726e3f87f7388833c2a25638759287c67",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4939:6:4",
														"type": ""
													}
												],
												"src": "4841:163:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5156:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5166:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5232:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5237:2:4",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5173:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5173:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5166:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5338:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_34b15d85d6796fb603098d6f5b598f1726e3f87f7388833c2a25638759287c67",
																	"nodeType": "YulIdentifier",
																	"src": "5249:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5249:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5249:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5351:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5362:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5367:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5358:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5358:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5351:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_34b15d85d6796fb603098d6f5b598f1726e3f87f7388833c2a25638759287c67_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5144:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5152:3:4",
														"type": ""
													}
												],
												"src": "5010:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5553:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5563:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5575:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5586:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5571:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5571:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5563:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5610:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5621:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5606:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5606:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5629:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5635:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5625:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5625:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5599:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5599:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5599:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5655:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5789:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_34b15d85d6796fb603098d6f5b598f1726e3f87f7388833c2a25638759287c67_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5663:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5663:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5655:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_34b15d85d6796fb603098d6f5b598f1726e3f87f7388833c2a25638759287c67__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5533:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5548:4:4",
														"type": ""
													}
												],
												"src": "5382:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5872:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5889:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5912:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5894:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5894:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5882:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5882:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5882:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5860:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5867:3:4",
														"type": ""
													}
												],
												"src": "5807:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6029:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6039:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6051:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6062:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6047:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6047:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6039:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6119:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6132:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6143:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6128:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6128:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6075:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6075:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6075:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6001:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6013:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6024:4:4",
														"type": ""
													}
												],
												"src": "5931:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6222:80:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6232:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6247:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6241:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6241:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6232:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6290:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6263:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6263:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6263:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6200:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6208:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6216:5:4",
														"type": ""
													}
												],
												"src": "6159:143:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6385:274:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6431:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6433:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6433:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6433:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6406:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6415:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6402:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6402:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6427:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6398:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6398:32:4"
															},
															"nodeType": "YulIf",
															"src": "6395:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "6524:128:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6539:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6553:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6543:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6568:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6614:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6625:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6610:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6610:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6634:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "6578:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6578:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6568:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6355:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6366:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6378:6:4",
														"type": ""
													}
												],
												"src": "6308:351:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6760:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6777:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6782:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6770:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6770:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6770:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6798:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6817:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6822:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6813:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6813:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "6798:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6732:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6737:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "6748:11:4",
														"type": ""
													}
												],
												"src": "6665:168:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6945:8:4",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6937:6:4",
														"type": ""
													}
												],
												"src": "6839:114:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7104:217:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7114:72:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7179:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7184:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7121:57:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7121:65:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7114:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7284:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nodeType": "YulIdentifier",
																	"src": "7195:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7195:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7195:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7297:18:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7308:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7313:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7304:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7304:11:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7297:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7092:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7100:3:4",
														"type": ""
													}
												],
												"src": "6959:362:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7553:411:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7563:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7575:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7586:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7571:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7571:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7563:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7643:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7656:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7667:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7652:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7652:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7599:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7599:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7599:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7724:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7737:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7748:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7733:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7733:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7680:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7680:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7680:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7773:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7784:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7769:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7769:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7793:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7799:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7789:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7789:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7762:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7762:48:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7762:48:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7819:138:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7952:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7827:123:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7827:130:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7819:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7517:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7529:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7537:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7548:4:4",
														"type": ""
													}
												],
												"src": "7327:637:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256t_bytes_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4, value5 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 160))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value6, value7 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_34b15d85d6796fb603098d6f5b598f1726e3f87f7388833c2a25638759287c67(memPtr) {\n\n        mstore(add(memPtr, 0), \"no permission\")\n\n    }\n\n    function abi_encode_t_stringliteral_34b15d85d6796fb603098d6f5b598f1726e3f87f7388833c2a25638759287c67_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_34b15d85d6796fb603098d6f5b598f1726e3f87f7388833c2a25638759287c67(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_34b15d85d6796fb603098d6f5b598f1726e3f87f7388833c2a25638759287c67__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_34b15d85d6796fb603098d6f5b598f1726e3f87f7388833c2a25638759287c67_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061003e575f3560e01c806223de29146100425780633ccfd60b1461005e578063e89081f814610068575b5f80fd5b61005c600480360381019061005791906103d6565b610098565b005b6100666100f4565b005b610082600480360381019061007d91906104a0565b6102cc565b60405161008f91906104da565b60405180910390f35b845f808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546100e39190610520565b925050819055505050505050505050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610183576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017a906105ad565b60405180910390fd5b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016101de91906105da565b602060405180830381865afa1580156101f9573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061021d9190610607565b905060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639bd9bbc660015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b815260040161029c929190610665565b5f604051808303815f87803b1580156102b3575f80fd5b505af11580156102c5573d5f803e3d5ffd5b5050505050565b5f602052805f5260405f205f915090505481565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610311826102e8565b9050919050565b61032181610307565b811461032b575f80fd5b50565b5f8135905061033c81610318565b92915050565b5f819050919050565b61035481610342565b811461035e575f80fd5b50565b5f8135905061036f8161034b565b92915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f84011261039657610395610375565b5b8235905067ffffffffffffffff8111156103b3576103b2610379565b5b6020830191508360018202830111156103cf576103ce61037d565b5b9250929050565b5f805f805f805f8060c0898b0312156103f2576103f16102e0565b5b5f6103ff8b828c0161032e565b98505060206104108b828c0161032e565b97505060406104218b828c0161032e565b96505060606104328b828c01610361565b955050608089013567ffffffffffffffff811115610453576104526102e4565b5b61045f8b828c01610381565b945094505060a089013567ffffffffffffffff811115610482576104816102e4565b5b61048e8b828c01610381565b92509250509295985092959890939650565b5f602082840312156104b5576104b46102e0565b5b5f6104c28482850161032e565b91505092915050565b6104d481610342565b82525050565b5f6020820190506104ed5f8301846104cb565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61052a82610342565b915061053583610342565b925082820190508082111561054d5761054c6104f3565b5b92915050565b5f82825260208201905092915050565b7f6e6f207065726d697373696f6e000000000000000000000000000000000000005f82015250565b5f610597600d83610553565b91506105a282610563565b602082019050919050565b5f6020820190508181035f8301526105c48161058b565b9050919050565b6105d481610307565b82525050565b5f6020820190506105ed5f8301846105cb565b92915050565b5f815190506106018161034b565b92915050565b5f6020828403121561061c5761061b6102e0565b5b5f610629848285016105f3565b91505092915050565b5f82825260208201905092915050565b50565b5f6106505f83610632565b915061065b82610642565b5f82019050919050565b5f6060820190506106785f8301856105cb565b61068560208301846104cb565b818103604083015261069681610645565b9050939250505056fea26469706673582212204e0745d55ebadfe5bf568dc076a76918c14cfd9645ca4e27cdc1fe47a80518e464736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3E JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x23DE29 EQ PUSH2 0x42 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x5E JUMPI DUP1 PUSH4 0xE89081F8 EQ PUSH2 0x68 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x3D6 JUMP JUMPDEST PUSH2 0x98 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x66 PUSH2 0xF4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x82 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7D SWAP2 SWAP1 PUSH2 0x4A0 JUMP JUMPDEST PUSH2 0x2CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8F SWAP2 SWAP1 PUSH2 0x4DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP5 PUSH0 DUP1 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x520 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x183 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17A SWAP1 PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x5DA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x607 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9BD9BBC6 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29C SWAP3 SWAP2 SWAP1 PUSH2 0x665 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2B3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2C5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x311 DUP3 PUSH2 0x2E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x321 DUP2 PUSH2 0x307 JUMP JUMPDEST DUP2 EQ PUSH2 0x32B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x33C DUP2 PUSH2 0x318 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x354 DUP2 PUSH2 0x342 JUMP JUMPDEST DUP2 EQ PUSH2 0x35E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x36F DUP2 PUSH2 0x34B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x396 JUMPI PUSH2 0x395 PUSH2 0x375 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B3 JUMPI PUSH2 0x3B2 PUSH2 0x379 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x3CF JUMPI PUSH2 0x3CE PUSH2 0x37D JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x3F2 JUMPI PUSH2 0x3F1 PUSH2 0x2E0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3FF DUP12 DUP3 DUP13 ADD PUSH2 0x32E JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x410 DUP12 DUP3 DUP13 ADD PUSH2 0x32E JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x421 DUP12 DUP3 DUP13 ADD PUSH2 0x32E JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x432 DUP12 DUP3 DUP13 ADD PUSH2 0x361 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x453 JUMPI PUSH2 0x452 PUSH2 0x2E4 JUMP JUMPDEST JUMPDEST PUSH2 0x45F DUP12 DUP3 DUP13 ADD PUSH2 0x381 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x482 JUMPI PUSH2 0x481 PUSH2 0x2E4 JUMP JUMPDEST JUMPDEST PUSH2 0x48E DUP12 DUP3 DUP13 ADD PUSH2 0x381 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4B5 JUMPI PUSH2 0x4B4 PUSH2 0x2E0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x4C2 DUP5 DUP3 DUP6 ADD PUSH2 0x32E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4D4 DUP2 PUSH2 0x342 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4ED PUSH0 DUP4 ADD DUP5 PUSH2 0x4CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x52A DUP3 PUSH2 0x342 JUMP JUMPDEST SWAP2 POP PUSH2 0x535 DUP4 PUSH2 0x342 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x54D JUMPI PUSH2 0x54C PUSH2 0x4F3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6E6F207065726D697373696F6E00000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x597 PUSH1 0xD DUP4 PUSH2 0x553 JUMP JUMPDEST SWAP2 POP PUSH2 0x5A2 DUP3 PUSH2 0x563 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5C4 DUP2 PUSH2 0x58B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5D4 DUP2 PUSH2 0x307 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5ED PUSH0 DUP4 ADD DUP5 PUSH2 0x5CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x601 DUP2 PUSH2 0x34B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x61C JUMPI PUSH2 0x61B PUSH2 0x2E0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x629 DUP5 DUP3 DUP6 ADD PUSH2 0x5F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x650 PUSH0 DUP4 PUSH2 0x632 JUMP JUMPDEST SWAP2 POP PUSH2 0x65B DUP3 PUSH2 0x642 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x678 PUSH0 DUP4 ADD DUP6 PUSH2 0x5CB JUMP JUMPDEST PUSH2 0x685 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4CB JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x696 DUP2 PUSH2 0x645 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E SMOD GASLIMIT 0xD5 0x5E 0xBA 0xDF 0xE5 0xBF JUMP DUP14 0xC0 PUSH23 0xA76918C14CFD9645CA4E27CDC1FE47A80518E464736F6C PUSH4 0x43000814 STOP CALLER ",
							"sourceMap": "262:1030:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;824:198;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1028:261;;;:::i;:::-;;308:38;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;824:198;1009:6;993;:12;1000:4;993:12;;;;;;;;;;;;;;;;:22;;;;;;;:::i;:::-;;;;;;;;824:198;;;;;;;;:::o;1028:261::-;1091:6;;;;;;;;;;;1077:20;;:10;:20;;;1069:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;1170:12;1185:6;;;;;;;;;;;:16;;;1210:4;1185:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1170:46;;1250:6;;;;;;;;;;;:11;;;1262:6;;;;;;;;;;;1270:7;1250:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1059:230;1028:261::o;308:38::-;;;;;;;;;;;;;;;;;:::o;88:117:4:-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:117::-;1306:1;1303;1296:12;1320:117;1429:1;1426;1419:12;1443:117;1552:1;1549;1542:12;1579:552;1636:8;1646:6;1696:3;1689:4;1681:6;1677:17;1673:27;1663:122;;1704:79;;:::i;:::-;1663:122;1817:6;1804:20;1794:30;;1847:18;1839:6;1836:30;1833:117;;;1869:79;;:::i;:::-;1833:117;1983:4;1975:6;1971:17;1959:29;;2037:3;2029:4;2021:6;2017:17;2007:8;2003:32;2000:41;1997:128;;;2044:79;;:::i;:::-;1997:128;1579:552;;;;;:::o;2137:1453::-;2263:6;2271;2279;2287;2295;2303;2311;2319;2368:3;2356:9;2347:7;2343:23;2339:33;2336:120;;;2375:79;;:::i;:::-;2336:120;2495:1;2520:53;2565:7;2556:6;2545:9;2541:22;2520:53;:::i;:::-;2510:63;;2466:117;2622:2;2648:53;2693:7;2684:6;2673:9;2669:22;2648:53;:::i;:::-;2638:63;;2593:118;2750:2;2776:53;2821:7;2812:6;2801:9;2797:22;2776:53;:::i;:::-;2766:63;;2721:118;2878:2;2904:53;2949:7;2940:6;2929:9;2925:22;2904:53;:::i;:::-;2894:63;;2849:118;3034:3;3023:9;3019:19;3006:33;3066:18;3058:6;3055:30;3052:117;;;3088:79;;:::i;:::-;3052:117;3201:64;3257:7;3248:6;3237:9;3233:22;3201:64;:::i;:::-;3183:82;;;;2977:298;3342:3;3331:9;3327:19;3314:33;3374:18;3366:6;3363:30;3360:117;;;3396:79;;:::i;:::-;3360:117;3509:64;3565:7;3556:6;3545:9;3541:22;3509:64;:::i;:::-;3491:82;;;;3285:298;2137:1453;;;;;;;;;;;:::o;3596:329::-;3655:6;3704:2;3692:9;3683:7;3679:23;3675:32;3672:119;;;3710:79;;:::i;:::-;3672:119;3830:1;3855:53;3900:7;3891:6;3880:9;3876:22;3855:53;:::i;:::-;3845:63;;3801:117;3596:329;;;;:::o;3931:118::-;4018:24;4036:5;4018:24;:::i;:::-;4013:3;4006:37;3931:118;;:::o;4055:222::-;4148:4;4186:2;4175:9;4171:18;4163:26;;4199:71;4267:1;4256:9;4252:17;4243:6;4199:71;:::i;:::-;4055:222;;;;:::o;4283:180::-;4331:77;4328:1;4321:88;4428:4;4425:1;4418:15;4452:4;4449:1;4442:15;4469:191;4509:3;4528:20;4546:1;4528:20;:::i;:::-;4523:25;;4562:20;4580:1;4562:20;:::i;:::-;4557:25;;4605:1;4602;4598:9;4591:16;;4626:3;4623:1;4620:10;4617:36;;;4633:18;;:::i;:::-;4617:36;4469:191;;;;:::o;4666:169::-;4750:11;4784:6;4779:3;4772:19;4824:4;4819:3;4815:14;4800:29;;4666:169;;;;:::o;4841:163::-;4981:15;4977:1;4969:6;4965:14;4958:39;4841:163;:::o;5010:366::-;5152:3;5173:67;5237:2;5232:3;5173:67;:::i;:::-;5166:74;;5249:93;5338:3;5249:93;:::i;:::-;5367:2;5362:3;5358:12;5351:19;;5010:366;;;:::o;5382:419::-;5548:4;5586:2;5575:9;5571:18;5563:26;;5635:9;5629:4;5625:20;5621:1;5610:9;5606:17;5599:47;5663:131;5789:4;5663:131;:::i;:::-;5655:139;;5382:419;;;:::o;5807:118::-;5894:24;5912:5;5894:24;:::i;:::-;5889:3;5882:37;5807:118;;:::o;5931:222::-;6024:4;6062:2;6051:9;6047:18;6039:26;;6075:71;6143:1;6132:9;6128:17;6119:6;6075:71;:::i;:::-;5931:222;;;;:::o;6159:143::-;6216:5;6247:6;6241:13;6232:22;;6263:33;6290:5;6263:33;:::i;:::-;6159:143;;;;:::o;6308:351::-;6378:6;6427:2;6415:9;6406:7;6402:23;6398:32;6395:119;;;6433:79;;:::i;:::-;6395:119;6553:1;6578:64;6634:7;6625:6;6614:9;6610:22;6578:64;:::i;:::-;6568:74;;6524:128;6308:351;;;;:::o;6665:168::-;6748:11;6782:6;6777:3;6770:19;6822:4;6817:3;6813:14;6798:29;;6665:168;;;;:::o;6839:114::-;;:::o;6959:362::-;7100:3;7121:65;7184:1;7179:3;7121:65;:::i;:::-;7114:72;;7195:93;7284:3;7195:93;:::i;:::-;7313:1;7308:3;7304:11;7297:18;;6959:362;;;:::o;7327:637::-;7548:4;7586:2;7575:9;7571:18;7563:26;;7599:71;7667:1;7656:9;7652:17;7643:6;7599:71;:::i;:::-;7680:72;7748:2;7737:9;7733:18;7724:6;7680:72;:::i;:::-;7799:9;7793:4;7789:20;7784:2;7773:9;7769:18;7762:48;7827:130;7952:4;7827:130;:::i;:::-;7819:138;;7327:637;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "349800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"givers(address)": "2823",
								"tokensReceived(address,address,address,uint256,bytes,bytes)": "infinite",
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 262,
									"end": 1292,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 262,
									"end": 1292,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 262,
									"end": 1292,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 445,
									"end": 487,
									"name": "PUSH",
									"source": 3,
									"value": "1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24"
								},
								{
									"begin": 392,
									"end": 488,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 392,
									"end": 488,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 392,
									"end": 488,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 392,
									"end": 488,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 392,
									"end": 488,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 392,
									"end": 488,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 392,
									"end": 488,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 392,
									"end": 488,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 392,
									"end": 488,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 392,
									"end": 488,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 392,
									"end": 488,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 392,
									"end": 488,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 392,
									"end": 488,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 392,
									"end": 488,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 392,
									"end": 488,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 392,
									"end": 488,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 392,
									"end": 488,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 392,
									"end": 488,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 392,
									"end": 488,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 392,
									"end": 488,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 625,
									"end": 818,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 625,
									"end": 818,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 625,
									"end": 818,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 625,
									"end": 818,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 625,
									"end": 818,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 625,
									"end": 818,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 625,
									"end": 818,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 625,
									"end": 818,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 625,
									"end": 818,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 625,
									"end": 818,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 625,
									"end": 818,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 625,
									"end": 818,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 625,
									"end": 818,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 625,
									"end": 818,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 625,
									"end": 818,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 625,
									"end": 818,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 625,
									"end": 818,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 625,
									"end": 818,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 625,
									"end": 818,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 625,
									"end": 818,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 625,
									"end": 818,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 625,
									"end": 818,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 625,
									"end": 818,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 625,
									"end": 818,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 625,
									"end": 818,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 625,
									"end": 818,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 625,
									"end": 818,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 625,
									"end": 818,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 625,
									"end": 818,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 625,
									"end": 818,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 625,
									"end": 818,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 625,
									"end": 818,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 625,
									"end": 818,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 625,
									"end": 818,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 625,
									"end": 818,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 663,
									"end": 671,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 663,
									"end": 671,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 663,
									"end": 671,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 663,
									"end": 671,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 663,
									"end": 671,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 663,
									"end": 671,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 663,
									"end": 671,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 663,
									"end": 671,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 663,
									"end": 671,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 663,
									"end": 671,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 663,
									"end": 671,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 663,
									"end": 695,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 663,
									"end": 695,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 663,
									"end": 695,
									"name": "PUSH",
									"source": 3,
									"value": "29965A1D"
								},
								{
									"begin": 704,
									"end": 708,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 553,
									"end": 619,
									"name": "PUSH",
									"source": 3,
									"value": "B281FC8C12954D22544DB45DE3159A39272895B169A852B314F9CC762E44C53B"
								},
								{
									"begin": 711,
									"end": 742,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 711,
									"end": 742,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 752,
									"end": 756,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 663,
									"end": 758,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 663,
									"end": 758,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 663,
									"end": 758,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 663,
									"end": 758,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFF"
								},
								{
									"begin": 663,
									"end": 758,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 663,
									"end": 758,
									"name": "PUSH",
									"source": 3,
									"value": "E0"
								},
								{
									"begin": 663,
									"end": 758,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 663,
									"end": 758,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 663,
									"end": 758,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 663,
									"end": 758,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 663,
									"end": 758,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 663,
									"end": 758,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 663,
									"end": 758,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 663,
									"end": 758,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 663,
									"end": 758,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 663,
									"end": 758,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 663,
									"end": 758,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 663,
									"end": 758,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 663,
									"end": 758,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 663,
									"end": 758,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 663,
									"end": 758,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 663,
									"end": 758,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 663,
									"end": 758,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 663,
									"end": 758,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 663,
									"end": 758,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 663,
									"end": 758,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 663,
									"end": 758,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 663,
									"end": 758,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 663,
									"end": 758,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 663,
									"end": 758,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 663,
									"end": 758,
									"name": "EXTCODESIZE",
									"source": 3
								},
								{
									"begin": 663,
									"end": 758,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 663,
									"end": 758,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 663,
									"end": 758,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 663,
									"end": 758,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 663,
									"end": 758,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 663,
									"end": 758,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 663,
									"end": 758,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 663,
									"end": 758,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 663,
									"end": 758,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 663,
									"end": 758,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 663,
									"end": 758,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 663,
									"end": 758,
									"name": "GAS",
									"source": 3
								},
								{
									"begin": 663,
									"end": 758,
									"name": "CALL",
									"source": 3
								},
								{
									"begin": 663,
									"end": 758,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 663,
									"end": 758,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 663,
									"end": 758,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 663,
									"end": 758,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 663,
									"end": 758,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 663,
									"end": 758,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 663,
									"end": 758,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 663,
									"end": 758,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 663,
									"end": 758,
									"name": "RETURNDATACOPY",
									"source": 3
								},
								{
									"begin": 663,
									"end": 758,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 663,
									"end": 758,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 663,
									"end": 758,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 663,
									"end": 758,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 663,
									"end": 758,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 663,
									"end": 758,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 663,
									"end": 758,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 663,
									"end": 758,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 663,
									"end": 758,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 777,
									"end": 787,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 768,
									"end": 774,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 768,
									"end": 774,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 768,
									"end": 787,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 768,
									"end": 787,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 768,
									"end": 787,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 768,
									"end": 787,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 768,
									"end": 787,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 768,
									"end": 787,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 768,
									"end": 787,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 768,
									"end": 787,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 768,
									"end": 787,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 768,
									"end": 787,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 768,
									"end": 787,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 768,
									"end": 787,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 768,
									"end": 787,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 768,
									"end": 787,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 768,
									"end": 787,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 768,
									"end": 787,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 768,
									"end": 787,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 768,
									"end": 787,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 806,
									"end": 811,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 797,
									"end": 803,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 797,
									"end": 803,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 797,
									"end": 811,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 797,
									"end": 811,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 797,
									"end": 811,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 797,
									"end": 811,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 797,
									"end": 811,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 797,
									"end": 811,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 797,
									"end": 811,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 797,
									"end": 811,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 797,
									"end": 811,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 797,
									"end": 811,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 797,
									"end": 811,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 797,
									"end": 811,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 797,
									"end": 811,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 797,
									"end": 811,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 797,
									"end": 811,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 797,
									"end": 811,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 797,
									"end": 811,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 797,
									"end": 811,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 625,
									"end": 818,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 262,
									"end": 1292,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 262,
									"end": 1292,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 679,
									"name": "tag",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 568,
									"end": 679,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 620,
									"end": 627,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 649,
									"end": 673,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 667,
									"end": 672,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 649,
									"end": 673,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 649,
									"end": 673,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 649,
									"end": 673,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 649,
									"end": 673,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 638,
									"end": 673,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 638,
									"end": 673,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 679,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 568,
									"end": 679,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 568,
									"end": 679,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 679,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 685,
									"end": 837,
									"name": "tag",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 685,
									"end": 837,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 773,
									"end": 812,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 806,
									"end": 811,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 773,
									"end": 812,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 773,
									"end": 812,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 773,
									"end": 812,
									"name": "tag",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 773,
									"end": 812,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 766,
									"end": 771,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 763,
									"end": 813,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 753,
									"end": 831,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 753,
									"end": 831,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 827,
									"end": 828,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 824,
									"end": 825,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 817,
									"end": 829,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 753,
									"end": 831,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 753,
									"end": 831,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 685,
									"end": 837,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 685,
									"end": 837,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 843,
									"end": 1016,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 843,
									"end": 1016,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 915,
									"end": 920,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 946,
									"end": 952,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 940,
									"end": 953,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 931,
									"end": 953,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 931,
									"end": 953,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 962,
									"end": 1010,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 1004,
									"end": 1009,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 962,
									"end": 1010,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 962,
									"end": 1010,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 962,
									"end": 1010,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 962,
									"end": 1010,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 843,
									"end": 1016,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 843,
									"end": 1016,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 843,
									"end": 1016,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 843,
									"end": 1016,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 843,
									"end": 1016,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1022,
									"end": 1403,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1022,
									"end": 1403,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1107,
									"end": 1113,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1156,
									"end": 1158,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1144,
									"end": 1153,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1135,
									"end": 1142,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1127,
									"end": 1159,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 1124,
									"end": 1243,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1124,
									"end": 1243,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 1124,
									"end": 1243,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1162,
									"end": 1241,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 1162,
									"end": 1241,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 1162,
									"end": 1241,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1162,
									"end": 1241,
									"name": "tag",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 1162,
									"end": 1241,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1124,
									"end": 1243,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 1124,
									"end": 1243,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1282,
									"end": 1283,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1307,
									"end": 1386,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1378,
									"end": 1385,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1369,
									"end": 1375,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 1367,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1354,
									"end": 1376,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1307,
									"end": 1386,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 1307,
									"end": 1386,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1307,
									"end": 1386,
									"name": "tag",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1307,
									"end": 1386,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1297,
									"end": 1386,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1297,
									"end": 1386,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1253,
									"end": 1396,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1022,
									"end": 1403,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1022,
									"end": 1403,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1022,
									"end": 1403,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1022,
									"end": 1403,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1022,
									"end": 1403,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1409,
									"end": 1527,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1409,
									"end": 1527,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1496,
									"end": 1520,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 1514,
									"end": 1519,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1496,
									"end": 1520,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 1496,
									"end": 1520,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1496,
									"end": 1520,
									"name": "tag",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 1496,
									"end": 1520,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1491,
									"end": 1494,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1484,
									"end": 1521,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1409,
									"end": 1527,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1409,
									"end": 1527,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1409,
									"end": 1527,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1533,
									"end": 1610,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 1533,
									"end": 1610,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1570,
									"end": 1577,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1599,
									"end": 1604,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1588,
									"end": 1604,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1588,
									"end": 1604,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1533,
									"end": 1610,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1533,
									"end": 1610,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1533,
									"end": 1610,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1533,
									"end": 1610,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1616,
									"end": 1734,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 1616,
									"end": 1734,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1703,
									"end": 1727,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 1721,
									"end": 1726,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1703,
									"end": 1727,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 1703,
									"end": 1727,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1703,
									"end": 1727,
									"name": "tag",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 1703,
									"end": 1727,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1698,
									"end": 1701,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1691,
									"end": 1728,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1616,
									"end": 1734,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1616,
									"end": 1734,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1616,
									"end": 1734,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1740,
									"end": 2182,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1740,
									"end": 2182,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1889,
									"end": 1893,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1927,
									"end": 1929,
									"name": "PUSH",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 1916,
									"end": 1925,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1912,
									"end": 1930,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1904,
									"end": 1930,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1904,
									"end": 1930,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1940,
									"end": 2011,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 2008,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1997,
									"end": 2006,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1993,
									"end": 2010,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1984,
									"end": 1990,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1940,
									"end": 2011,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1940,
									"end": 2011,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1940,
									"end": 2011,
									"name": "tag",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 1940,
									"end": 2011,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2021,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 2089,
									"end": 2091,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2078,
									"end": 2087,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2074,
									"end": 2092,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 2021,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 2021,
									"end": 2093,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2021,
									"end": 2093,
									"name": "tag",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 2021,
									"end": 2093,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2103,
									"end": 2175,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 2171,
									"end": 2173,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2160,
									"end": 2169,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2156,
									"end": 2174,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2147,
									"end": 2153,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2103,
									"end": 2175,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2103,
									"end": 2175,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2103,
									"end": 2175,
									"name": "tag",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 2103,
									"end": 2175,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1740,
									"end": 2182,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 1740,
									"end": 2182,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 1740,
									"end": 2182,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1740,
									"end": 2182,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1740,
									"end": 2182,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1740,
									"end": 2182,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1740,
									"end": 2182,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 262,
									"end": 1292,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 262,
									"end": 1292,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 262,
									"end": 1292,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 262,
									"end": 1292,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 262,
									"end": 1292,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 262,
									"end": 1292,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 1292,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 262,
									"end": 1292,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 1292,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204e0745d55ebadfe5bf568dc076a76918c14cfd9645ca4e27cdc1fe47a80518e464736f6c63430008140033",
									".code": [
										{
											"begin": 262,
											"end": 1292,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 262,
											"end": 1292,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 262,
											"end": 1292,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 262,
											"end": 1292,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 262,
											"end": 1292,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 262,
											"end": 1292,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 262,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 262,
											"end": 1292,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 262,
											"end": 1292,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 1292,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 262,
											"end": 1292,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 262,
											"end": 1292,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 262,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 262,
											"end": 1292,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 262,
											"end": 1292,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 262,
											"end": 1292,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 262,
											"end": 1292,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 262,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 262,
											"end": 1292,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 262,
											"end": 1292,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 1292,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 262,
											"end": 1292,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 262,
											"end": 1292,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 262,
											"end": 1292,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 262,
											"end": 1292,
											"name": "PUSH",
											"source": 3,
											"value": "23DE29"
										},
										{
											"begin": 262,
											"end": 1292,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 262,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 262,
											"end": 1292,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 262,
											"end": 1292,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 262,
											"end": 1292,
											"name": "PUSH",
											"source": 3,
											"value": "3CCFD60B"
										},
										{
											"begin": 262,
											"end": 1292,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 262,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 262,
											"end": 1292,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 262,
											"end": 1292,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 262,
											"end": 1292,
											"name": "PUSH",
											"source": 3,
											"value": "E89081F8"
										},
										{
											"begin": 262,
											"end": 1292,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 262,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 262,
											"end": 1292,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 262,
											"end": 1292,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 262,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 262,
											"end": 1292,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 1292,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 262,
											"end": 1292,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 824,
											"end": 1022,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 824,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 824,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 824,
											"end": 1022,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 824,
											"end": 1022,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 824,
											"end": 1022,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 824,
											"end": 1022,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 824,
											"end": 1022,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 824,
											"end": 1022,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 824,
											"end": 1022,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 824,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 824,
											"end": 1022,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 824,
											"end": 1022,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 824,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 824,
											"end": 1022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 824,
											"end": 1022,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 824,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 824,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 824,
											"end": 1022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 824,
											"end": 1022,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 824,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 824,
											"end": 1022,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1028,
											"end": 1289,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1028,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1028,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1028,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1028,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1028,
											"end": 1289,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1028,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1028,
											"end": 1289,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 308,
											"end": 346,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 308,
											"end": 346,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 308,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 308,
											"end": 346,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 308,
											"end": 346,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 308,
											"end": 346,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 308,
											"end": 346,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 308,
											"end": 346,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 308,
											"end": 346,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 308,
											"end": 346,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 308,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 308,
											"end": 346,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 308,
											"end": 346,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 308,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 308,
											"end": 346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 308,
											"end": 346,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 308,
											"end": 346,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 308,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 308,
											"end": 346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 308,
											"end": 346,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 308,
											"end": 346,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 308,
											"end": 346,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 308,
											"end": 346,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 308,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 308,
											"end": 346,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 308,
											"end": 346,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 308,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 308,
											"end": 346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 308,
											"end": 346,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 308,
											"end": 346,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 308,
											"end": 346,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 308,
											"end": 346,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 308,
											"end": 346,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 308,
											"end": 346,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 308,
											"end": 346,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 308,
											"end": 346,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 308,
											"end": 346,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 824,
											"end": 1022,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 824,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 993,
											"end": 999,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 993,
											"end": 1005,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1000,
											"end": 1004,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 993,
											"end": 1005,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 993,
											"end": 1005,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 993,
											"end": 1005,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 993,
											"end": 1005,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 993,
											"end": 1005,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 993,
											"end": 1005,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 993,
											"end": 1005,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 993,
											"end": 1005,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 993,
											"end": 1005,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 993,
											"end": 1005,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 993,
											"end": 1005,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 993,
											"end": 1005,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 993,
											"end": 1005,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 993,
											"end": 1005,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 993,
											"end": 1005,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 993,
											"end": 1005,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 993,
											"end": 1015,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 993,
											"end": 1015,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 993,
											"end": 1015,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 993,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 993,
											"end": 1015,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 993,
											"end": 1015,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 993,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 993,
											"end": 1015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 993,
											"end": 1015,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 993,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 993,
											"end": 1015,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 993,
											"end": 1015,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 993,
											"end": 1015,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 993,
											"end": 1015,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 993,
											"end": 1015,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 993,
											"end": 1015,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 993,
											"end": 1015,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 824,
											"end": 1022,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 824,
											"end": 1022,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 824,
											"end": 1022,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 824,
											"end": 1022,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 824,
											"end": 1022,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 824,
											"end": 1022,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 824,
											"end": 1022,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 824,
											"end": 1022,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 824,
											"end": 1022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1028,
											"end": 1289,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1028,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1097,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1091,
											"end": 1097,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1097,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1097,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1097,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1097,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1091,
											"end": 1097,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1097,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1097,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1097,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1091,
											"end": 1097,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1097,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1077,
											"end": 1097,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1087,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1097,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1077,
											"end": 1097,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1097,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1069,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1069,
											"end": 1115,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1069,
											"end": 1115,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1069,
											"end": 1115,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1069,
											"end": 1115,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1069,
											"end": 1115,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1069,
											"end": 1115,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1069,
											"end": 1115,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1069,
											"end": 1115,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1069,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1069,
											"end": 1115,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1069,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1069,
											"end": 1115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1069,
											"end": 1115,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1069,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1069,
											"end": 1115,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1069,
											"end": 1115,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1069,
											"end": 1115,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1069,
											"end": 1115,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1069,
											"end": 1115,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1069,
											"end": 1115,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1069,
											"end": 1115,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1069,
											"end": 1115,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1069,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1170,
											"end": 1182,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1185,
											"end": 1191,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1185,
											"end": 1191,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1185,
											"end": 1191,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1191,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1191,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1191,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1185,
											"end": 1191,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1191,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1191,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1191,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1185,
											"end": 1191,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1201,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1185,
											"end": 1201,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1201,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 1210,
											"end": 1214,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1185,
											"end": 1216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1185,
											"end": 1216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1185,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1170,
											"end": 1216,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1170,
											"end": 1216,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1256,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1250,
											"end": 1256,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1250,
											"end": 1256,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1256,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1256,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1256,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1250,
											"end": 1256,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1256,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1256,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1256,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1250,
											"end": 1256,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1261,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1250,
											"end": 1261,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1261,
											"name": "PUSH",
											"source": 3,
											"value": "9BD9BBC6"
										},
										{
											"begin": 1262,
											"end": 1268,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1262,
											"end": 1268,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1262,
											"end": 1268,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1262,
											"end": 1268,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1262,
											"end": 1268,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1262,
											"end": 1268,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1262,
											"end": 1268,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1262,
											"end": 1268,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1262,
											"end": 1268,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1262,
											"end": 1268,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1262,
											"end": 1268,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1270,
											"end": 1277,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1250,
											"end": 1282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1282,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1059,
											"end": 1289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1028,
											"end": 1289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 308,
											"end": 346,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 308,
											"end": 346,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 308,
											"end": 346,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 346,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 308,
											"end": 346,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 308,
											"end": 346,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 308,
											"end": 346,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 346,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 308,
											"end": 346,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 308,
											"end": 346,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 346,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 308,
											"end": 346,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 346,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 308,
											"end": 346,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 308,
											"end": 346,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 308,
											"end": 346,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 308,
											"end": 346,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 308,
											"end": 346,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 308,
											"end": 346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1314,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1197,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1306,
											"end": 1307,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1303,
											"end": 1304,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1308,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1320,
											"end": 1437,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1320,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1426,
											"end": 1427,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1419,
											"end": 1431,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1443,
											"end": 1560,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1443,
											"end": 1560,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1552,
											"end": 1553,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1549,
											"end": 1550,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1542,
											"end": 1554,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1636,
											"end": 1644,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1652,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1696,
											"end": 1699,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1689,
											"end": 1693,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1681,
											"end": 1687,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1677,
											"end": 1694,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1673,
											"end": 1700,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1704,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1704,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1704,
											"end": 1783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1704,
											"end": 1783,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1704,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1817,
											"end": 1823,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1804,
											"end": 1824,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1794,
											"end": 1824,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1794,
											"end": 1824,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1847,
											"end": 1865,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1839,
											"end": 1845,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1836,
											"end": 1866,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1869,
											"end": 1948,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 1869,
											"end": 1948,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1869,
											"end": 1948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1869,
											"end": 1948,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 1869,
											"end": 1948,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 1987,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1975,
											"end": 1981,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 1988,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1959,
											"end": 1988,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1959,
											"end": 1988,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2037,
											"end": 2040,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2029,
											"end": 2033,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2021,
											"end": 2027,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2017,
											"end": 2034,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2007,
											"end": 2015,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2035,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2041,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1997,
											"end": 2125,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1997,
											"end": 2125,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1997,
											"end": 2125,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2044,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2044,
											"end": 2123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2123,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2044,
											"end": 2123,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1997,
											"end": 2125,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1997,
											"end": 2125,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1579,
											"end": 2131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2263,
											"end": 2269,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2271,
											"end": 2277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2285,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2287,
											"end": 2293,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2295,
											"end": 2301,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2303,
											"end": 2309,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2311,
											"end": 2317,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2319,
											"end": 2325,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2368,
											"end": 2371,
											"name": "PUSH",
											"source": 4,
											"value": "C0"
										},
										{
											"begin": 2356,
											"end": 2365,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 2347,
											"end": 2354,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 2343,
											"end": 2366,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2372,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2456,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2336,
											"end": 2456,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2375,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2375,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2375,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2375,
											"end": 2454,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2375,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2456,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2336,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2495,
											"end": 2496,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2520,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2565,
											"end": 2572,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 2556,
											"end": 2562,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 2541,
											"end": 2563,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2520,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2520,
											"end": 2573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2520,
											"end": 2573,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2520,
											"end": 2573,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2510,
											"end": 2573,
											"name": "SWAP9",
											"source": 4
										},
										{
											"begin": 2510,
											"end": 2573,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2466,
											"end": 2583,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2622,
											"end": 2624,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2648,
											"end": 2701,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 2693,
											"end": 2700,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 2684,
											"end": 2690,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2673,
											"end": 2682,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 2669,
											"end": 2691,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2701,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2648,
											"end": 2701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2701,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 2648,
											"end": 2701,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2701,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2701,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2593,
											"end": 2711,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2750,
											"end": 2752,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2776,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 2821,
											"end": 2828,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 2812,
											"end": 2818,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2801,
											"end": 2810,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 2797,
											"end": 2819,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2776,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2776,
											"end": 2829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2776,
											"end": 2829,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 2776,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2829,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2829,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2721,
											"end": 2839,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2880,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2904,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2949,
											"end": 2956,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 2940,
											"end": 2946,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2938,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 2925,
											"end": 2947,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2904,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 2904,
											"end": 2957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2904,
											"end": 2957,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2904,
											"end": 2957,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2894,
											"end": 2957,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 2894,
											"end": 2957,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2967,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3034,
											"end": 3037,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3023,
											"end": 3032,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3038,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3006,
											"end": 3039,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3066,
											"end": 3084,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3058,
											"end": 3064,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3085,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3052,
											"end": 3169,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3052,
											"end": 3169,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 3052,
											"end": 3169,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3088,
											"end": 3167,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3088,
											"end": 3167,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3088,
											"end": 3167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3088,
											"end": 3167,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3088,
											"end": 3167,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3052,
											"end": 3169,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 3052,
											"end": 3169,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3201,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 3257,
											"end": 3264,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 3248,
											"end": 3254,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 3233,
											"end": 3255,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3201,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 3201,
											"end": 3265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3201,
											"end": 3265,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 3201,
											"end": 3265,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3183,
											"end": 3265,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 3183,
											"end": 3265,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3183,
											"end": 3265,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 3183,
											"end": 3265,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2977,
											"end": 3275,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3342,
											"end": 3345,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 3331,
											"end": 3340,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 3327,
											"end": 3346,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3314,
											"end": 3347,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3374,
											"end": 3392,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3366,
											"end": 3372,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3363,
											"end": 3393,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3360,
											"end": 3477,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3360,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3360,
											"end": 3477,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3396,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3396,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3396,
											"end": 3475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3396,
											"end": 3475,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3396,
											"end": 3475,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3360,
											"end": 3477,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3360,
											"end": 3477,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3509,
											"end": 3573,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3565,
											"end": 3572,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 3556,
											"end": 3562,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3545,
											"end": 3554,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 3541,
											"end": 3563,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3509,
											"end": 3573,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 3509,
											"end": 3573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3509,
											"end": 3573,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3509,
											"end": 3573,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3491,
											"end": 3573,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3491,
											"end": 3573,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3491,
											"end": 3573,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3491,
											"end": 3573,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3583,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "SWAP9",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "SWAP9",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 3590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3596,
											"end": 3925,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 3596,
											"end": 3925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3655,
											"end": 3661,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3704,
											"end": 3706,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3692,
											"end": 3701,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3683,
											"end": 3690,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3679,
											"end": 3702,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3675,
											"end": 3707,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3672,
											"end": 3791,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3672,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3672,
											"end": 3791,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3710,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 3710,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3710,
											"end": 3789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3710,
											"end": 3789,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 3710,
											"end": 3789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3672,
											"end": 3791,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3672,
											"end": 3791,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3830,
											"end": 3831,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3855,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3900,
											"end": 3907,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3880,
											"end": 3889,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3876,
											"end": 3898,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3855,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 3855,
											"end": 3908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3855,
											"end": 3908,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3855,
											"end": 3908,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3845,
											"end": 3908,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3845,
											"end": 3908,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3801,
											"end": 3918,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3596,
											"end": 3925,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3596,
											"end": 3925,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3596,
											"end": 3925,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3596,
											"end": 3925,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3596,
											"end": 3925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3931,
											"end": 4049,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 3931,
											"end": 4049,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4018,
											"end": 4042,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 4036,
											"end": 4041,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4018,
											"end": 4042,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 4018,
											"end": 4042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4018,
											"end": 4042,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 4018,
											"end": 4042,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4013,
											"end": 4016,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4006,
											"end": 4043,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3931,
											"end": 4049,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3931,
											"end": 4049,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3931,
											"end": 4049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4055,
											"end": 4277,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 4055,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4148,
											"end": 4152,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4186,
											"end": 4188,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4175,
											"end": 4184,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4171,
											"end": 4189,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4163,
											"end": 4189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4163,
											"end": 4189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4199,
											"end": 4270,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 4267,
											"end": 4268,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4256,
											"end": 4265,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4252,
											"end": 4269,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4243,
											"end": 4249,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4199,
											"end": 4270,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 4199,
											"end": 4270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4199,
											"end": 4270,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 4199,
											"end": 4270,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4055,
											"end": 4277,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4055,
											"end": 4277,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4055,
											"end": 4277,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4055,
											"end": 4277,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4055,
											"end": 4277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4283,
											"end": 4463,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 4283,
											"end": 4463,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4331,
											"end": 4408,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4328,
											"end": 4329,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4321,
											"end": 4409,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4428,
											"end": 4432,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 4425,
											"end": 4426,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4418,
											"end": 4433,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4452,
											"end": 4456,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4449,
											"end": 4450,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4442,
											"end": 4457,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4469,
											"end": 4660,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4469,
											"end": 4660,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4509,
											"end": 4512,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4528,
											"end": 4548,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 4546,
											"end": 4547,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4548,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 4528,
											"end": 4548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4548,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 4528,
											"end": 4548,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4523,
											"end": 4548,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4523,
											"end": 4548,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4562,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 4580,
											"end": 4581,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4562,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 4562,
											"end": 4582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4562,
											"end": 4582,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 4562,
											"end": 4582,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4557,
											"end": 4582,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4557,
											"end": 4582,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4605,
											"end": 4606,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4602,
											"end": 4603,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4598,
											"end": 4607,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4591,
											"end": 4607,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4591,
											"end": 4607,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4626,
											"end": 4629,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4624,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4620,
											"end": 4630,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4617,
											"end": 4653,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4617,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 4617,
											"end": 4653,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4633,
											"end": 4651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 4633,
											"end": 4651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 4633,
											"end": 4651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4633,
											"end": 4651,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 4633,
											"end": 4651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4617,
											"end": 4653,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 4617,
											"end": 4653,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4469,
											"end": 4660,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4469,
											"end": 4660,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4469,
											"end": 4660,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4469,
											"end": 4660,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4469,
											"end": 4660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4666,
											"end": 4835,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 4666,
											"end": 4835,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4750,
											"end": 4761,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4784,
											"end": 4790,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4779,
											"end": 4782,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4772,
											"end": 4791,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4824,
											"end": 4828,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4819,
											"end": 4822,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4815,
											"end": 4829,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4800,
											"end": 4829,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4800,
											"end": 4829,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4666,
											"end": 4835,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4666,
											"end": 4835,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4666,
											"end": 4835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4666,
											"end": 4835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4666,
											"end": 4835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 5004,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 4841,
											"end": 5004,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4981,
											"end": 4996,
											"name": "PUSH",
											"source": 4,
											"value": "6E6F207065726D697373696F6E00000000000000000000000000000000000000"
										},
										{
											"begin": 4977,
											"end": 4978,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4969,
											"end": 4975,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4965,
											"end": 4979,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4958,
											"end": 4997,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 5004,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 5004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5010,
											"end": 5376,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 5010,
											"end": 5376,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5152,
											"end": 5155,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5173,
											"end": 5240,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 5237,
											"end": 5239,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 5232,
											"end": 5235,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5240,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 5173,
											"end": 5240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5240,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 5173,
											"end": 5240,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5166,
											"end": 5240,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5166,
											"end": 5240,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5249,
											"end": 5342,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 5338,
											"end": 5341,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5249,
											"end": 5342,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 5249,
											"end": 5342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5249,
											"end": 5342,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 5249,
											"end": 5342,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5367,
											"end": 5369,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5362,
											"end": 5365,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5358,
											"end": 5370,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5351,
											"end": 5370,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5351,
											"end": 5370,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5010,
											"end": 5376,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5010,
											"end": 5376,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5010,
											"end": 5376,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5010,
											"end": 5376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5382,
											"end": 5801,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5382,
											"end": 5801,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5548,
											"end": 5552,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5586,
											"end": 5588,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5575,
											"end": 5584,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5563,
											"end": 5589,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5563,
											"end": 5589,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5635,
											"end": 5644,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5629,
											"end": 5633,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5625,
											"end": 5645,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5621,
											"end": 5622,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5619,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5606,
											"end": 5623,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5599,
											"end": 5646,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5663,
											"end": 5794,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 5789,
											"end": 5793,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5663,
											"end": 5794,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 5663,
											"end": 5794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5663,
											"end": 5794,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 5663,
											"end": 5794,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5655,
											"end": 5794,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5655,
											"end": 5794,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5382,
											"end": 5801,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5382,
											"end": 5801,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5382,
											"end": 5801,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5382,
											"end": 5801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5807,
											"end": 5925,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 5807,
											"end": 5925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5894,
											"end": 5918,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 5912,
											"end": 5917,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5894,
											"end": 5918,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5894,
											"end": 5918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5894,
											"end": 5918,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 5894,
											"end": 5918,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5889,
											"end": 5892,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5882,
											"end": 5919,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5807,
											"end": 5925,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5807,
											"end": 5925,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5807,
											"end": 5925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5931,
											"end": 6153,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 5931,
											"end": 6153,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6024,
											"end": 6028,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6062,
											"end": 6064,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6051,
											"end": 6060,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6047,
											"end": 6065,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6039,
											"end": 6065,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6039,
											"end": 6065,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6075,
											"end": 6146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 6143,
											"end": 6144,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6132,
											"end": 6141,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6128,
											"end": 6145,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6119,
											"end": 6125,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6075,
											"end": 6146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 6075,
											"end": 6146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6075,
											"end": 6146,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 6075,
											"end": 6146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5931,
											"end": 6153,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5931,
											"end": 6153,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5931,
											"end": 6153,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5931,
											"end": 6153,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5931,
											"end": 6153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6159,
											"end": 6302,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 6159,
											"end": 6302,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6216,
											"end": 6221,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6247,
											"end": 6253,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6241,
											"end": 6254,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6232,
											"end": 6254,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6232,
											"end": 6254,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6263,
											"end": 6296,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 6290,
											"end": 6295,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6263,
											"end": 6296,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 6263,
											"end": 6296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6263,
											"end": 6296,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 6263,
											"end": 6296,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6159,
											"end": 6302,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6159,
											"end": 6302,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6159,
											"end": 6302,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6159,
											"end": 6302,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6159,
											"end": 6302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6308,
											"end": 6659,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 6308,
											"end": 6659,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6378,
											"end": 6384,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6427,
											"end": 6429,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6415,
											"end": 6424,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6406,
											"end": 6413,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6402,
											"end": 6425,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6430,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 6395,
											"end": 6514,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6395,
											"end": 6514,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 6395,
											"end": 6514,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 6433,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 6433,
											"end": 6512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6512,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 6433,
											"end": 6512,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6395,
											"end": 6514,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 6395,
											"end": 6514,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6553,
											"end": 6554,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6578,
											"end": 6642,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 6634,
											"end": 6641,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6631,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6614,
											"end": 6623,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6610,
											"end": 6632,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6578,
											"end": 6642,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 6578,
											"end": 6642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6578,
											"end": 6642,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 6578,
											"end": 6642,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6568,
											"end": 6642,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6568,
											"end": 6642,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6524,
											"end": 6652,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6308,
											"end": 6659,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6308,
											"end": 6659,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6308,
											"end": 6659,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6308,
											"end": 6659,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6308,
											"end": 6659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6665,
											"end": 6833,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 6665,
											"end": 6833,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6748,
											"end": 6759,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6777,
											"end": 6780,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6770,
											"end": 6789,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6826,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6817,
											"end": 6820,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6813,
											"end": 6827,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6798,
											"end": 6827,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6798,
											"end": 6827,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6665,
											"end": 6833,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6665,
											"end": 6833,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6665,
											"end": 6833,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6665,
											"end": 6833,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6665,
											"end": 6833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6839,
											"end": 6953,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 6839,
											"end": 6953,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6839,
											"end": 6953,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6839,
											"end": 6953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6959,
											"end": 7321,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 6959,
											"end": 7321,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7100,
											"end": 7103,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7121,
											"end": 7186,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 7184,
											"end": 7185,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7179,
											"end": 7182,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7121,
											"end": 7186,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 7121,
											"end": 7186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7121,
											"end": 7186,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 7121,
											"end": 7186,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7114,
											"end": 7186,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7114,
											"end": 7186,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7195,
											"end": 7288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 7284,
											"end": 7287,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7195,
											"end": 7288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 7195,
											"end": 7288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7195,
											"end": 7288,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 7195,
											"end": 7288,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7313,
											"end": 7314,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7308,
											"end": 7311,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7304,
											"end": 7315,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7297,
											"end": 7315,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7297,
											"end": 7315,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6959,
											"end": 7321,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6959,
											"end": 7321,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6959,
											"end": 7321,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6959,
											"end": 7321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7327,
											"end": 7964,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 7327,
											"end": 7964,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7548,
											"end": 7552,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7586,
											"end": 7588,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 7575,
											"end": 7584,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7571,
											"end": 7589,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7563,
											"end": 7589,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7563,
											"end": 7589,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7599,
											"end": 7670,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 7667,
											"end": 7668,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7656,
											"end": 7665,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7652,
											"end": 7669,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7643,
											"end": 7649,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7599,
											"end": 7670,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 7599,
											"end": 7670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7599,
											"end": 7670,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 7599,
											"end": 7670,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7680,
											"end": 7752,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 7748,
											"end": 7750,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7737,
											"end": 7746,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7733,
											"end": 7751,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7724,
											"end": 7730,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7680,
											"end": 7752,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 7680,
											"end": 7752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7680,
											"end": 7752,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 7680,
											"end": 7752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7799,
											"end": 7808,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7793,
											"end": 7797,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7789,
											"end": 7809,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7786,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7773,
											"end": 7782,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7769,
											"end": 7787,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7762,
											"end": 7810,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7827,
											"end": 7957,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 7952,
											"end": 7956,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7827,
											"end": 7957,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 7827,
											"end": 7957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7827,
											"end": 7957,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 7827,
											"end": 7957,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7819,
											"end": 7957,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7819,
											"end": 7957,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7327,
											"end": 7964,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7327,
											"end": 7964,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7327,
											"end": 7964,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7327,
											"end": 7964,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7327,
											"end": 7964,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7327,
											"end": 7964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC777/IERC777.sol",
								"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol",
								"@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol",
								"contracts/Merit.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"givers(address)": "e89081f8",
							"tokensReceived(address,address,address,uint256,bytes,bytes)": "0023de29",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC777\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"givers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"tokensReceived\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"tokensReceived(address,address,address,uint256,bytes,bytes)\":{\"details\":\"Called by an {IERC777} token contract whenever tokens are being moved or created into a registered account (`to`). The type of operation is conveyed by `from` being the zero address or not. This call occurs _after_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the post-operation state. This function may revert to prevent the operation from being executed.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Merit.sol\":\"Merit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x79e6094047e40d49efa3c725b7a1519e16c28c46944884b5f6d0fbe89b450f03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2570d04d0b74df414fa33f9f7da6442419a07909ece7baeecd7147d9c7d6a432\",\"dweb:/ipfs/QmRDQM1kzddwCk8ateQgnogu495fWb4L9Xwr42DAQhHzi5\"]},\"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol\":{\"keccak256\":\"0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3\",\"dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA\"]},\"@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol\":{\"keccak256\":\"0x42f11bff9d625194645e74f01a3cf8f69a3979f07becfa293f75757cabb92050\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dc35b43a667c38d0868c20d648ccb2ec4107bcc1e77ce4fc79ce4938cb51a6d\",\"dweb:/ipfs/QmbwauNDkoLnWYB2owGeZBYWz2y7ZejdC6Q3c5MPZHLnNm\"]},\"contracts/Merit.sol\":{\"keccak256\":\"0x0e2c1dbb077fc979868da441b917fc029a38e9b031c6cf163ba5b9c567e717b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5feda10a03fc3acce258ebe0464b856913dbf4faf1af6fdf2cabafbebf7bd955\",\"dweb:/ipfs/QmeaRVveyDcySUK7LJfNy3aaQg8cZ31W4vL9pWbfKpBJvU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 283,
								"contract": "contracts/Merit.sol:Merit",
								"label": "givers",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "contracts/Merit.sol:Merit",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 288,
								"contract": "contracts/Merit.sol:Merit",
								"label": "_token",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC777)162"
							},
							{
								"astId": 294,
								"contract": "contracts/Merit.sol:Merit",
								"label": "_erc1820",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IERC1820Registry)272"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC1820Registry)272": {
								"encoding": "inplace",
								"label": "contract IERC1820Registry",
								"numberOfBytes": "20"
							},
							"t_contract(IERC777)162": {
								"encoding": "inplace",
								"label": "contract IERC777",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/Merit.sol:22:29:\n   |\n22 |     function tokensReceived(address operator,address from,address to,uint amount,  \n   |                             ^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 864,
					"file": "contracts/Merit.sol",
					"start": 848
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/Merit.sol:22:59:\n   |\n22 |     function tokensReceived(address operator,address from,address to,uint amount,  \n   |                                                           ^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 888,
					"file": "contracts/Merit.sol",
					"start": 878
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/Merit.sol:23:9:\n   |\n23 |         bytes calldata userData,\n   |         ^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 935,
					"file": "contracts/Merit.sol",
					"start": 912
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/Merit.sol:24:9:\n   |\n24 |         bytes calldata operatorData) external {\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 972,
					"file": "contracts/Merit.sol",
					"start": 945
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/token/ERC777/IERC777.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC777/IERC777.sol",
					"exportedSymbols": {
						"IERC777": [
							162
						]
					},
					"id": 163,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC777",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "133:372:0",
								"text": " @dev Interface of the ERC777Token standard as defined in the EIP.\n This contract uses the\n https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let\n token holders and recipients react to token movements by using setting implementers\n for the associated interfaces in said registry. See {IERC1820Registry} and\n {ERC1820Implementer}."
							},
							"fullyImplemented": false,
							"id": 162,
							"linearizedBaseContracts": [
								162
							],
							"name": "IERC777",
							"nameLocation": "516:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "530:199:0",
										"text": " @dev Emitted when `amount` tokens are created by `operator` and assigned to `to`.\n Note that some additional user `data` and `operatorData` can be logged in the event."
									},
									"eventSelector": "2fe5be0146f74c5bce36c0b80911af6c7d86ff27e89d5cfa61fc681327954e5d",
									"id": 15,
									"name": "Minted",
									"nameLocation": "740:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "763:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "747:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "747:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "789:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "773:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "801:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "793:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "793:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "815:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "809:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 10,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 13,
												"indexed": false,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "827:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "821:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 12,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "821:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "746:94:0"
									},
									"src": "734:107:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 16,
										"nodeType": "StructuredDocumentation",
										"src": "847:187:0",
										"text": " @dev Emitted when `operator` destroys `amount` tokens from `account`.\n Note that some additional user `data` and `operatorData` can be logged in the event."
									},
									"eventSelector": "a78a9be3a7b862d26933ad85fb11d80ef66b8f972d7cbba06621d583943a4098",
									"id": 28,
									"name": "Burned",
									"nameLocation": "1045:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1068:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "1052:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 17,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1052:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1094:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "1078:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1078:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1108:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "1100:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1100:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 24,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1122:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "1116:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 23,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1116:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"indexed": false,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "1134:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "1128:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 25,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1128:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1051:96:0"
									},
									"src": "1039:109:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 29,
										"nodeType": "StructuredDocumentation",
										"src": "1154:83:0",
										"text": " @dev Emitted when `operator` is made operator for `tokenHolder`."
									},
									"eventSelector": "f4caeb2d6ca8932a215a353d0703c326ec2d81fc68170f320eb2ab49e9df61f9",
									"id": 35,
									"name": "AuthorizedOperator",
									"nameLocation": "1248:18:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1283:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1267:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenHolder",
												"nameLocation": "1309:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1293:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1293:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:55:0"
									},
									"src": "1242:80:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1328:97:0",
										"text": " @dev Emitted when `operator` is revoked its operator status for `tokenHolder`."
									},
									"eventSelector": "50546e66e5f44d728365dc3908c63bc5cfeeab470722c1677e3073a6ac294aa1",
									"id": 42,
									"name": "RevokedOperator",
									"nameLocation": "1436:15:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1468:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1452:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenHolder",
												"nameLocation": "1494:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1478:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 39,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1478:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1451:55:0"
									},
									"src": "1430:77:0"
								},
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "1513:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 48,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1581:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1585:2:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1611:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 45,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1611:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1610:15:0"
									},
									"scope": 162,
									"src": "1572:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "1632:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1748:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1754:2:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1780:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 51,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1780:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1779:15:0"
									},
									"scope": 162,
									"src": "1739:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1801:287:0",
										"text": " @dev Returns the smallest part of the token that is not divisible. This\n means all token operations (creation, movement and destruction) must have\n amounts that are a multiple of this number.\n For most token contracts, this value will equal 1."
									},
									"functionSelector": "556f0dc7",
									"id": 60,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "granularity",
									"nameLocation": "2102:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2113:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2139:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2139:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2138:9:0"
									},
									"scope": 162,
									"src": "2093:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "2154:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 66,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2234:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2245:2:0"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "2271:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2271:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2270:9:0"
									},
									"scope": 162,
									"src": "2225:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "2286:83:0",
										"text": " @dev Returns the amount of tokens owned by an account (`owner`)."
									},
									"functionSelector": "70a08231",
									"id": 74,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2383:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2401:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "2393:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2393:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2392:15:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "2431:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:9:0"
									},
									"scope": 162,
									"src": "2374:66:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "2446:585:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n If send or receive hooks are registered for the caller and `recipient`,\n the corresponding functions will be called with `data` and empty\n `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n Emits a {Sent} event.\n Requirements\n - the caller must have at least `amount` tokens.\n - `recipient` cannot be the zero address.\n - if `recipient` is a contract, it must implement the {IERC777Recipient}\n interface."
									},
									"functionSelector": "9bd9bbc6",
									"id": 84,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "send",
									"nameLocation": "3045:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3058:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "3050:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3077:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "3069:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3100:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "3085:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 80,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3085:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:56:0"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3114:0:0"
									},
									"scope": 162,
									"src": "3036:79:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "3121:404:0",
										"text": " @dev Destroys `amount` tokens from the caller's account, reducing the\n total supply.\n If a send hook is registered for the caller, the corresponding function\n will be called with `data` and empty `operatorData`. See {IERC777Sender}.\n Emits a {Burned} event.\n Requirements\n - the caller must have at least `amount` tokens."
									},
									"functionSelector": "fe9d9303",
									"id": 92,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "3539:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3552:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3544:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3544:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3575:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3560:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 88,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3560:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3543:37:0"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3589:0:0"
									},
									"scope": 162,
									"src": "3530:60:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "3596:249:0",
										"text": " @dev Returns true if an account is an operator of `tokenHolder`.\n Operators can send and burn tokens on behalf of their owners. All\n accounts are their own operator.\n See {operatorSend} and {operatorBurn}."
									},
									"functionSelector": "d95b6371",
									"id": 102,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isOperatorFor",
									"nameLocation": "3859:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3881:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "3873:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3873:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "tokenHolder",
												"nameLocation": "3899:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "3891:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3872:39:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "3935:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 99,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3935:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3934:6:0"
									},
									"scope": 162,
									"src": "3850:91:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 103,
										"nodeType": "StructuredDocumentation",
										"src": "3947:233:0",
										"text": " @dev Make an account an operator of the caller.\n See {isOperatorFor}.\n Emits an {AuthorizedOperator} event.\n Requirements\n - `operator` cannot be calling address."
									},
									"functionSelector": "959b8c3f",
									"id": 108,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "authorizeOperator",
									"nameLocation": "4194:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4220:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4212:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4212:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4211:18:0"
									},
									"returnParameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4238:0:0"
									},
									"scope": 162,
									"src": "4185:54:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "4245:261:0",
										"text": " @dev Revoke an account's operator status for the caller.\n See {isOperatorFor} and {defaultOperators}.\n Emits a {RevokedOperator} event.\n Requirements\n - `operator` cannot be calling address."
									},
									"functionSelector": "fad8b32a",
									"id": 114,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeOperator",
									"nameLocation": "4520:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4543:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4535:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4535:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4534:18:0"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4561:0:0"
									},
									"scope": 162,
									"src": "4511:51:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "4568:338:0",
										"text": " @dev Returns the list of default operators. These accounts are operators\n for all token holders, even if {authorizeOperator} was never called on\n them.\n This list is immutable, but individual holders may revoke these via\n {revokeOperator}, in which case {isOperatorFor} will return false."
									},
									"functionSelector": "06e48538",
									"id": 121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "defaultOperators",
									"nameLocation": "4920:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4936:2:0"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "4962:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 117,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4962:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 118,
													"nodeType": "ArrayTypeName",
													"src": "4962:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4961:18:0"
									},
									"scope": 162,
									"src": "4911:69:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 122,
										"nodeType": "StructuredDocumentation",
										"src": "4986:714:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient`. The caller must\n be an operator of `sender`.\n If send or receive hooks are registered for `sender` and `recipient`,\n the corresponding functions will be called with `data` and\n `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n Emits a {Sent} event.\n Requirements\n - `sender` cannot be the zero address.\n - `sender` must have at least `amount` tokens.\n - the caller must be an operator for `sender`.\n - `recipient` cannot be the zero address.\n - if `recipient` is a contract, it must implement the {IERC777Recipient}\n interface."
									},
									"functionSelector": "62ad1b83",
									"id": 135,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "operatorSend",
									"nameLocation": "5714:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5744:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "5736:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5736:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5768:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "5760:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5795:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "5787:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5787:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5826:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "5811:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 129,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5811:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "5855:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "5840:27:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 131,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5840:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5726:147:0"
									},
									"returnParameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5882:0:0"
									},
									"scope": 162,
									"src": "5705:178:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "5889:532:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the total supply.\n The caller must be an operator of `account`.\n If a send hook is registered for `account`, the corresponding function\n will be called with `data` and `operatorData`. See {IERC777Sender}.\n Emits a {Burned} event.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens.\n - the caller must be an operator for `account`."
									},
									"functionSelector": "fc673c4f",
									"id": 147,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "operatorBurn",
									"nameLocation": "6435:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6456:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "6448:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6448:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6473:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "6465:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6465:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6496:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "6481:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 141,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6481:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "6517:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "6502:27:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 143,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6502:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6447:83:0"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6539:0:0"
									},
									"scope": 162,
									"src": "6426:114:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "06b541ddaa720db2b10a4d0cdac39b8d360425fc073085fac19bc82614677987",
									"id": 161,
									"name": "Sent",
									"nameLocation": "6552:4:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6582:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "6566:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6616:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "6600:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6646:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "6630:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6630:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6666:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "6658:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6658:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6688:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "6682:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 156,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6682:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"indexed": false,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "6708:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "6702:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 158,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6702:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6556:170:0"
									},
									"src": "6546:181:0"
								}
							],
							"scope": 163,
							"src": "506:6223:0",
							"usedErrors": [],
							"usedEvents": [
								15,
								28,
								35,
								42,
								161
							]
						}
					],
					"src": "108:6622:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol",
					"exportedSymbols": {
						"IERC777Recipient": [
							182
						]
					},
					"id": 183,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 164,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC777Recipient",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 165,
								"nodeType": "StructuredDocumentation",
								"src": "127:406:1",
								"text": " @dev Interface of the ERC777TokensRecipient standard as defined in the EIP.\n Accounts can be notified of {IERC777} tokens being sent to them by having a\n contract implement this interface (contract holders can be their own\n implementer) and registering it on the\n https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry].\n See {IERC1820Registry} and {ERC1820Implementer}."
							},
							"fullyImplemented": false,
							"id": 182,
							"linearizedBaseContracts": [
								182
							],
							"name": "IERC777Recipient",
							"nameLocation": "544:16:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "567:474:1",
										"text": " @dev Called by an {IERC777} token contract whenever tokens are being\n moved or created into a registered account (`to`). The type of operation\n is conveyed by `from` being the zero address or not.\n This call occurs _after_ the token contract's state is updated, so\n {IERC777-balanceOf}, etc., can be used to query the post-operation state.\n This function may revert to prevent the operation from being executed."
									},
									"functionSelector": "0023de29",
									"id": 181,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokensReceived",
									"nameLocation": "1055:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1087:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "1079:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1113:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "1105:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1105:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1135:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "1127:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1127:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1155:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "1147:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1147:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "1186:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "1171:23:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 175,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1171:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "1219:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "1204:27:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 177,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1204:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1069:168:1"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1246:0:1"
									},
									"scope": 182,
									"src": "1046:201:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 183,
							"src": "534:715:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "102:1148:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol",
					"exportedSymbols": {
						"IERC1820Registry": [
							272
						]
					},
					"id": 273,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 184,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "124:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1820Registry",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 185,
								"nodeType": "StructuredDocumentation",
								"src": "149:619:2",
								"text": " @dev Interface of the global ERC1820 Registry, as defined in the\n https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register\n implementers for interfaces in this registry, as well as query support.\n Implementers may be shared by multiple accounts, and can also implement more\n than a single interface for each account. Contracts can implement interfaces\n for themselves, but externally-owned accounts (EOA) must delegate this to a\n contract.\n {IERC165} interfaces can also be queried via the registry.\n For an in-depth explanation and source code analysis, see the EIP text."
							},
							"fullyImplemented": false,
							"id": 272,
							"linearizedBaseContracts": [
								272
							],
							"name": "IERC1820Registry",
							"nameLocation": "779:16:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "93baa6efbd2244243bfee6ce4cfdd1d04fc4c0e9a786abd3a41313bd352db153",
									"id": 193,
									"name": "InterfaceImplementerSet",
									"nameLocation": "808:23:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "848:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "832:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "832:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"indexed": true,
												"mutability": "mutable",
												"name": "interfaceHash",
												"nameLocation": "873:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "857:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 188,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "857:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementer",
												"nameLocation": "904:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "888:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "831:85:2"
									},
									"src": "802:115:2"
								},
								{
									"anonymous": false,
									"eventSelector": "605c2dbf762e5f7d60a546d42e7205dcb1b011ebc62a61736a57c9089d3a4350",
									"id": 199,
									"name": "ManagerChanged",
									"nameLocation": "929:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "960:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "944:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "944:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"indexed": true,
												"mutability": "mutable",
												"name": "newManager",
												"nameLocation": "985:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "969:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "969:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "943:53:2"
									},
									"src": "923:74:2"
								},
								{
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "1003:445:2",
										"text": " @dev Sets `newManager` as the manager for `account`. A manager of an\n account is able to set interface implementers for it.\n By default, each account is its own manager. Passing a value of `0x0` in\n `newManager` will reset the manager to this initial state.\n Emits a {ManagerChanged} event.\n Requirements:\n - the caller must be the current manager for `account`."
									},
									"functionSelector": "5df8122f",
									"id": 207,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setManager",
									"nameLocation": "1462:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1481:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1473:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1473:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "newManager",
												"nameLocation": "1498:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1490:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1490:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1472:37:2"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:0:2"
									},
									"scope": 272,
									"src": "1453:66:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "1525:90:2",
										"text": " @dev Returns the manager for `account`.\n See {setManager}."
									},
									"functionSelector": "3d584063",
									"id": 215,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getManager",
									"nameLocation": "1629:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1648:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1640:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1640:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1639:17:2"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1680:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1680:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1679:9:2"
									},
									"scope": 272,
									"src": "1620:69:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "1695:815:2",
										"text": " @dev Sets the `implementer` contract as ``account``'s implementer for\n `interfaceHash`.\n `account` being the zero address is an alias for the caller's address.\n The zero address can also be used in `implementer` to remove an old one.\n See {interfaceHash} to learn how these are created.\n Emits an {InterfaceImplementerSet} event.\n Requirements:\n - the caller must be the current manager for `account`.\n - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not\n end in 28 zeroes).\n - `implementer` must implement {IERC1820Implementer} and return true when\n queried for support, unless `implementer` is the caller. See\n {IERC1820Implementer-canImplementInterfaceForAddress}."
									},
									"functionSelector": "29965a1d",
									"id": 225,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setInterfaceImplementer",
									"nameLocation": "2524:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2556:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "2548:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2548:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "_interfaceHash",
												"nameLocation": "2573:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "2565:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2565:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "implementer",
												"nameLocation": "2597:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "2589:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2589:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2547:62:2"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2618:0:2"
									},
									"scope": 272,
									"src": "2515:104:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 226,
										"nodeType": "StructuredDocumentation",
										"src": "2625:382:2",
										"text": " @dev Returns the implementer of `interfaceHash` for `account`. If no such\n implementer is registered, returns the zero address.\n If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28\n zeroes), `account` will be queried for support of it.\n `account` being the zero address is an alias for the caller's address."
									},
									"functionSelector": "aabbb8ca",
									"id": 235,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getInterfaceImplementer",
									"nameLocation": "3021:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3053:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "3045:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "_interfaceHash",
												"nameLocation": "3070:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "3062:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 229,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3062:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3044:41:2"
									},
									"returnParameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "3109:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3109:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3108:9:2"
									},
									"scope": 272,
									"src": "3012:106:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "3124:196:2",
										"text": " @dev Returns the interface hash for an `interfaceName`, as defined in the\n corresponding\n https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP]."
									},
									"functionSelector": "65ba36c1",
									"id": 243,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "interfaceHash",
									"nameLocation": "3334:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "interfaceName",
												"nameLocation": "3364:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "3348:29:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 237,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3348:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3347:31:2"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "3402:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 240,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3402:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3401:9:2"
									},
									"scope": 272,
									"src": "3325:86:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "3417:260:2",
										"text": " @notice Updates the cache with whether the contract implements an ERC165 interface or not.\n @param account Address of the contract for which to update the cache.\n @param interfaceId ERC165 interface for which to update the cache."
									},
									"functionSelector": "a41e7d51",
									"id": 251,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateERC165Cache",
									"nameLocation": "3691:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3717:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3709:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3733:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3726:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 247,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3726:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3708:37:2"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3754:0:2"
									},
									"scope": 272,
									"src": "3682:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "3761:536:2",
										"text": " @notice Checks whether a contract implements an ERC165 interface or not.\n If the result is not cached a direct lookup on the contract address is performed.\n If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling\n {updateERC165Cache} with the contract address.\n @param account Address of the contract to check.\n @param interfaceId ERC165 interface to check.\n @return True if `account` implements `interfaceId`, false otherwise."
									},
									"functionSelector": "f712f3e8",
									"id": 261,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementsERC165Interface",
									"nameLocation": "4311:25:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4345:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "4337:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4337:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "4361:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "4354:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 255,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "4354:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4336:37:2"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "4397:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 258,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4397:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4396:6:2"
									},
									"scope": 272,
									"src": "4302:101:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "4409:312:2",
										"text": " @notice Checks whether a contract implements an ERC165 interface or not without using or updating the cache.\n @param account Address of the contract to check.\n @param interfaceId ERC165 interface to check.\n @return True if `account` implements `interfaceId`, false otherwise."
									},
									"functionSelector": "b7056765",
									"id": 271,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementsERC165InterfaceNoCache",
									"nameLocation": "4735:32:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4776:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "4768:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4768:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "4792:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "4785:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 265,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "4785:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4767:37:2"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "4828:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 268,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4828:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4827:6:2"
									},
									"scope": 272,
									"src": "4726:108:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 273,
							"src": "769:4067:2",
							"usedErrors": [],
							"usedEvents": [
								193,
								199
							]
						}
					],
					"src": "124:4713:2"
				},
				"id": 2
			},
			"contracts/Merit.sol": {
				"ast": {
					"absolutePath": "contracts/Merit.sol",
					"exportedSymbols": {
						"IERC1820Registry": [
							272
						],
						"IERC777": [
							162
						],
						"IERC777Recipient": [
							182
						],
						"Merit": [
							380
						]
					},
					"id": 381,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 274,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol",
							"file": "@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol",
							"id": 275,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 381,
							"sourceUnit": 273,
							"src": "58:74:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol",
							"file": "@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol",
							"id": 276,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 381,
							"sourceUnit": 183,
							"src": "133:67:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC777/IERC777.sol",
							"file": "@openzeppelin/contracts/token/ERC777/IERC777.sol",
							"id": 277,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 381,
							"sourceUnit": 163,
							"src": "201:58:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 278,
										"name": "IERC777Recipient",
										"nameLocations": [
											"280:16:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 182,
										"src": "280:16:3"
									},
									"id": 279,
									"nodeType": "InheritanceSpecifier",
									"src": "280:16:3"
								}
							],
							"canonicalName": "Merit",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 380,
							"linearizedBaseContracts": [
								380,
								182
							],
							"name": "Merit",
							"nameLocation": "271:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "e89081f8",
									"id": 283,
									"mutability": "mutable",
									"name": "givers",
									"nameLocation": "340:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 380,
									"src": "308:38:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 282,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 280,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "316:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "308:24:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 281,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "327:4:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 285,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "360:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 380,
									"src": "352:14:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 284,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "352:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 288,
									"mutability": "mutable",
									"name": "_token",
									"nameLocation": "380:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 380,
									"src": "372:14:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC777_$162",
										"typeString": "contract IERC777"
									},
									"typeName": {
										"id": 287,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 286,
											"name": "IERC777",
											"nameLocations": [
												"372:7:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 162,
											"src": "372:7:3"
										},
										"referencedDeclaration": 162,
										"src": "372:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC777_$162",
											"typeString": "contract IERC777"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 294,
									"mutability": "mutable",
									"name": "_erc1820",
									"nameLocation": "417:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 380,
									"src": "392:96:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC1820Registry_$272",
										"typeString": "contract IERC1820Registry"
									},
									"typeName": {
										"id": 290,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 289,
											"name": "IERC1820Registry",
											"nameLocations": [
												"392:16:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 272,
											"src": "392:16:3"
										},
										"referencedDeclaration": 272,
										"src": "392:16:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC1820Registry_$272",
											"typeString": "contract IERC1820Registry"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307831383230613442373631384264453731446365386364633733614142364339353930356661443234",
												"id": 292,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "445:42:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 291,
											"name": "IERC1820Registry",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 272,
											"src": "428:16:3",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC1820Registry_$272_$",
												"typeString": "type(contract IERC1820Registry)"
											}
										},
										"id": 293,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "428:60:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC1820Registry_$272",
											"typeString": "contract IERC1820Registry"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 297,
									"mutability": "constant",
									"name": "TOKENS_RECIPIENT_INTERFACE_HASH",
									"nameLocation": "519:31:3",
									"nodeType": "VariableDeclaration",
									"scope": 380,
									"src": "494:125:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 295,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "494:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862323831666338633132393534643232353434646234356465333135396133393237323839356231363961383532623331346639636337363265343463353362",
										"id": 296,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "553:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_80741353335606793576644178559265408063696393279619534167571325834855102858555_by_1",
											"typeString": "int_const 8074...(69 digits omitted)...8555"
										},
										"value": "0xb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "652:166:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 308,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "704:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Merit_$380",
																		"typeString": "contract Merit"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Merit_$380",
																		"typeString": "contract Merit"
																	}
																],
																"id": 307,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "696:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 306,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "696:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "696:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 310,
															"name": "TOKENS_RECIPIENT_INTERFACE_HASH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "711:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 313,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "752:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Merit_$380",
																		"typeString": "contract Merit"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Merit_$380",
																		"typeString": "contract Merit"
																	}
																],
																"id": 312,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "744:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 311,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "744:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "744:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 303,
															"name": "_erc1820",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 294,
															"src": "663:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1820Registry_$272",
																"typeString": "contract IERC1820Registry"
															}
														},
														"id": 305,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "672:23:3",
														"memberName": "setInterfaceImplementer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 225,
														"src": "663:32:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (address,bytes32,address) external"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "663:95:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 316,
												"nodeType": "ExpressionStatement",
												"src": "663:95:3"
											},
											{
												"expression": {
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 317,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 285,
														"src": "768:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 318,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "777:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "781:6:3",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "777:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "768:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 321,
												"nodeType": "ExpressionStatement",
												"src": "768:19:3"
											},
											{
												"expression": {
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 322,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 288,
														"src": "797:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC777_$162",
															"typeString": "contract IERC777"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 323,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "806:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC777_$162",
															"typeString": "contract IERC777"
														}
													},
													"src": "797:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC777_$162",
														"typeString": "contract IERC777"
													}
												},
												"id": 325,
												"nodeType": "ExpressionStatement",
												"src": "797:14:3"
											}
										]
									},
									"id": 327,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "645:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "637:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC777_$162",
													"typeString": "contract IERC777"
												},
												"typeName": {
													"id": 299,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 298,
														"name": "IERC777",
														"nameLocations": [
															"637:7:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 162,
														"src": "637:7:3"
													},
													"referencedDeclaration": 162,
													"src": "637:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC777_$162",
														"typeString": "contract IERC777"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:15:3"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "652:0:3"
									},
									"scope": 380,
									"src": "625:193:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										181
									],
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "983:39:3",
										"statements": [
											{
												"expression": {
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 342,
															"name": "givers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "993:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 344,
														"indexExpression": {
															"id": 343,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "1000:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "993:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 345,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "1009:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "993:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "993:22:3"
											}
										]
									},
									"functionSelector": "0023de29",
									"id": 349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokensReceived",
									"nameLocation": "833:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "856:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "848:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "848:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "873:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "865:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "865:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "886:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "878:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "894:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "889:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "889:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "927:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "912:23:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 336,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "912:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "960:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "945:27:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 338,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "945:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "847:126:3"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:0:3"
									},
									"scope": 380,
									"src": "824:198:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 378,
										"nodeType": "Block",
										"src": "1059:230:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 353,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1077:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1081:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1077:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 355,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "1091:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1077:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f207065726d697373696f6e",
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1099:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_34b15d85d6796fb603098d6f5b598f1726e3f87f7388833c2a25638759287c67",
																"typeString": "literal_string \"no permission\""
															},
															"value": "no permission"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_34b15d85d6796fb603098d6f5b598f1726e3f87f7388833c2a25638759287c67",
																"typeString": "literal_string \"no permission\""
															}
														],
														"id": 352,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1069:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1069:46:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "ExpressionStatement",
												"src": "1069:46:3"
											},
											{
												"assignments": [
													361
												],
												"declarations": [
													{
														"constant": false,
														"id": 361,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "1175:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 378,
														"src": "1170:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 360,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1170:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 369,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 366,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1210:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Merit_$380",
																		"typeString": "contract Merit"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Merit_$380",
																		"typeString": "contract Merit"
																	}
																],
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1202:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 364,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1202:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1202:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 362,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "1185:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC777_$162",
																"typeString": "contract IERC777"
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1192:9:3",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 74,
														"src": "1185:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1185:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1170:46:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 373,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "1262:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 374,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "1270:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1279:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"id": 370,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "1250:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC777_$162",
																"typeString": "contract IERC777"
															}
														},
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1257:4:3",
														"memberName": "send",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 84,
														"src": "1250:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory) external"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1250:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "1250:32:3"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 379,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "1038:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1046:2:3"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1059:0:3"
									},
									"scope": 380,
									"src": "1028:261:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 381,
							"src": "262:1030:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:1260:3"
				},
				"id": 3
			}
		}
	}
}